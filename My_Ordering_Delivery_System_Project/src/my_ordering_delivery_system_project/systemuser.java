/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my_ordering_delivery_system_project;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.MessageFormat;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class systemuser extends javax.swing.JFrame {

    private final String url = "jdbc:sqlserver://localhost\\ABDO_HARB_HOSSAM;"
            + "databaseName=My_Ordering_Delivery_System_Project;"
            + "user=sa;"
            + "password=sql2020$$;";
    /**
     * Creates new form systemuser
     */
    public systemuser() {
        initComponents();
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(this, "Cannot Load JDBC Driver !!!");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    
    public void ItemCost() { //calculate the summation of orders
        double sum = 0;

        for (int i = 0; i < jTable1.getRowCount(); i++) {
            //row , //column
            sum = sum + Double.parseDouble(jTable1.getValueAt(i, 2).toString());
        }
        //1
        subtotalText.setText(Double.toString(sum));
        //dsgffgsd  (set)(input)  -----> (get) output
        double cTotal1 = Double.parseDouble(subtotalText.getText());

        double cTax = (cTotal1 * 3.9) / 100;

        String iTaxTotal = String.format(" Pound %.2f", cTax);
        taxText.setText(iTaxTotal);

        String iSubTotal = String.format(" Pound %.2f", cTotal1);
        subtotalText.setText(iSubTotal);

        String iTotal = String.format("Pound %.2f", cTotal1 + cTax);
        totalText.setText(iTotal);

        String Parcode = String.format("Total is Pound %.2f", cTotal1 + cTax);
        ReciptText.setText(Parcode);
    }

    //==========function====================================
    public void Change() { //calculate the reminder
        double sum = 0;
        double tax = 3.9;
        double cash = Double.parseDouble(cashText.getText());

        for (int i = 0; i < jTable1.getRowCount(); i++) {
            sum = sum + Double.parseDouble(jTable1.getValueAt(i, 2).toString());
        }

        double cTax = (sum * 3.9) / 100;
        double cChange = cash - (sum + cTax);//imp

        if(cash < (sum+cTax)){
            JOptionPane.showMessageDialog(this,"Insufficient Money");
            cashText.setText("");
            changeText.setText("");
        }
        String ChangeGivien = String.format("Â£%.2f", cChange);
        changeText.setText(ChangeGivien);
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel8 = new javax.swing.JPanel();
        jbtnprint = new javax.swing.JButton();
        jbtncheck = new javax.swing.JButton();
        jbtnreset = new javax.swing.JButton();
        jbtnremove = new javax.swing.JButton();
        jbtnexit = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Restaurant = new javax.swing.JTabbedPane();
        Pizza_hut = new javax.swing.JTabbedPane();
        jPanel40 = new javax.swing.JPanel();
        jbtnCheese_Lover = new javax.swing.JButton();
        jbtnBacon_Lover = new javax.swing.JButton();
        jbtnVeggie_Lover = new javax.swing.JButton();
        jbtnHaxatian_Supreme = new javax.swing.JButton();
        jbtnSuper_Supreme = new javax.swing.JButton();
        jbtnSupreme = new javax.swing.JButton();
        jbtnMeat_Lovers = new javax.swing.JButton();
        jbtnBacon_Margherita = new javax.swing.JButton();
        jbtn_Chicken_Supreme = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        BurgerKing = new javax.swing.JTabbedPane();
        jPanel39 = new javax.swing.JPanel();
        jbtnVeg_Chilli_Cheese = new javax.swing.JButton();
        jbtnPaneer_King = new javax.swing.JButton();
        jbtnChicken_Tandoor_Grill = new javax.swing.JButton();
        jbtnBK_Veggie = new javax.swing.JButton();
        jbtnVeg_Suprise = new javax.swing.JButton();
        jbtnChicken_Chilli = new javax.swing.JButton();
        jbtnCrspy_Veg = new javax.swing.JButton();
        jbtnCrispy_Veg_Supreme = new javax.swing.JButton();
        jbtnBK_Grill_Chicken = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        KFC = new javax.swing.JTabbedPane();
        jPanel33 = new javax.swing.JPanel();
        jbtnchicken_fillet = new javax.swing.JButton();
        jbtnchicken_zinger = new javax.swing.JButton();
        jbtn_mighty_fillet = new javax.swing.JButton();
        jbtnzinger_supreme = new javax.swing.JButton();
        jbtntoasted_twister = new javax.swing.JButton();
        jbtnfillet_supreme = new javax.swing.JButton();
        jbtnbigfiller_jalapeno = new javax.swing.JButton();
        jbtnbigfiller_supreme = new javax.swing.JButton();
        jbtnbigfiller_classic = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        TEXAS = new javax.swing.JTabbedPane();
        jPanel41 = new javax.swing.JPanel();
        jbtnCombo_Mexicana_Wrap = new javax.swing.JButton();
        jbtnCombo_Tex_Wrap = new javax.swing.JButton();
        jbtnCombo_Tex_Sampler = new javax.swing.JButton();
        jbtnTender_Wrap = new javax.swing.JButton();
        jbtnNAIS_Sample = new javax.swing.JButton();
        jbtnCombo_Tex_Supreme = new javax.swing.JButton();
        jbtnFiesta_Feast = new javax.swing.JButton();
        jbtnMinuman = new javax.swing.JButton();
        jbtnCrunchy_Deals = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        la_poire = new javax.swing.JTabbedPane();
        jPanel42 = new javax.swing.JPanel();
        jbtnFresh_Juice = new javax.swing.JButton();
        jbtnMango = new javax.swing.JButton();
        jbtnIced_Latte = new javax.swing.JButton();
        jbtnIced_Chocolate = new javax.swing.JButton();
        Iced_Coffe_Toffe = new javax.swing.JButton();
        jbtnIced_Mochaccino = new javax.swing.JButton();
        jbtnSunShine = new javax.swing.JButton();
        jbtnMilk_Shake = new javax.swing.JButton();
        jbtnOreio_Twist = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        costa_cafe = new javax.swing.JTabbedPane();
        jPanel44 = new javax.swing.JPanel();
        jbtnCORTO = new javax.swing.JButton();
        jbtnMocha_Corto = new javax.swing.JButton();
        jbtnBlack_Corto = new javax.swing.JButton();
        jbtnMolten_Cake = new javax.swing.JButton();
        jbtnMacchilato = new javax.swing.JButton();
        jbtnEspresso = new javax.swing.JButton();
        jbtnBaby_Ccino = new javax.swing.JButton();
        jbtnIce_Cream = new javax.swing.JButton();
        jbtnFlavour = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        paymentmethodCombo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cashText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        changeText = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ReciptText = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        taxText = new javax.swing.JTextField();
        subtotalText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        totalText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jbtn7 = new javax.swing.JButton();
        jbtn8 = new javax.swing.JButton();
        jbtn9 = new javax.swing.JButton();
        jbtn6 = new javax.swing.JButton();
        jbtn4 = new javax.swing.JButton();
        jbtn5 = new javax.swing.JButton();
        jbtn3 = new javax.swing.JButton();
        jbtn1 = new javax.swing.JButton();
        jbtn2 = new javax.swing.JButton();
        jbtn_dot = new javax.swing.JButton();
        jbtn0 = new javax.swing.JButton();
        jbtnC = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel8.setBackground(new java.awt.Color(0, 204, 204));
        jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbtnprint.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbtnprint.setText("Print");
        jbtnprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnprintActionPerformed(evt);
            }
        });
        jPanel8.add(jbtnprint, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 135, 51));

        jbtncheck.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbtncheck.setText("Check");
        jbtncheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtncheckActionPerformed(evt);
            }
        });
        jPanel8.add(jbtncheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 135, 49));

        jbtnreset.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbtnreset.setText("Reset");
        jbtnreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnresetActionPerformed(evt);
            }
        });
        jPanel8.add(jbtnreset, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 135, 51));

        jbtnremove.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbtnremove.setText("Remove");
        jbtnremove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnremoveActionPerformed(evt);
            }
        });
        jPanel8.add(jbtnremove, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, 135, 49));

        jbtnexit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbtnexit.setText("Exit");
        jbtnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnexitActionPerformed(evt);
            }
        });
        jPanel8.add(jbtnexit, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 154, 227, 45));
        jPanel8.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 210));

        jPanel2.setBackground(new java.awt.Color(255, 204, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Restaurant.setBackground(new java.awt.Color(153, 153, 255));

        Pizza_hut.setBackground(new java.awt.Color(153, 153, 255));

        jPanel40.setBackground(new java.awt.Color(255, 255, 255));
        jPanel40.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbtnCheese_Lover.setText("Cheese Lover");
        jbtnCheese_Lover.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnCheese_Lover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCheese_LoverActionPerformed(evt);
            }
        });
        jPanel40.add(jbtnCheese_Lover, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 11, 106, 72));

        jbtnBacon_Lover.setText("Bacon Lover");
        jbtnBacon_Lover.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnBacon_Lover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBacon_LoverActionPerformed(evt);
            }
        });
        jPanel40.add(jbtnBacon_Lover, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 11, 109, 72));

        jbtnVeggie_Lover.setText("Veggie Lover");
        jbtnVeggie_Lover.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnVeggie_Lover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnVeggie_LoverActionPerformed(evt);
            }
        });
        jPanel40.add(jbtnVeggie_Lover, new org.netbeans.lib.awtextra.AbsoluteConstraints(269, 11, 104, 72));

        jbtnHaxatian_Supreme.setText("Haxatian Supreme");
        jbtnHaxatian_Supreme.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnHaxatian_Supreme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnHaxatian_SupremeActionPerformed(evt);
            }
        });
        jPanel40.add(jbtnHaxatian_Supreme, new org.netbeans.lib.awtextra.AbsoluteConstraints(269, 113, 104, 72));

        jbtnSuper_Supreme.setText("Super Supreme");
        jbtnSuper_Supreme.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnSuper_Supreme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSuper_SupremeActionPerformed(evt);
            }
        });
        jPanel40.add(jbtnSuper_Supreme, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 113, 110, 72));

        jbtnSupreme.setText("Supreme");
        jbtnSupreme.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnSupreme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSupremeActionPerformed(evt);
            }
        });
        jPanel40.add(jbtnSupreme, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 113, 105, 72));

        jbtnMeat_Lovers.setText("Meat Lovers");
        jbtnMeat_Lovers.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnMeat_Lovers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnMeat_LoversActionPerformed(evt);
            }
        });
        jPanel40.add(jbtnMeat_Lovers, new org.netbeans.lib.awtextra.AbsoluteConstraints(269, 203, 104, 75));

        jbtnBacon_Margherita.setText("Bacon Margherita");
        jbtnBacon_Margherita.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnBacon_Margherita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBacon_MargheritajButton35ActionPerformed(evt);
            }
        });
        jPanel40.add(jbtnBacon_Margherita, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 203, 109, 75));

        jbtn_Chicken_Supreme.setText("Chicken Supreme");
        jbtn_Chicken_Supreme.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtn_Chicken_Supreme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_Chicken_SupremejButton36ActionPerformed(evt);
            }
        });
        jPanel40.add(jbtn_Chicken_Supreme, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 203, 110, 75));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Pizza Hut.jpg"))); // NOI18N
        jPanel40.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 350, 280));

        Pizza_hut.addTab("Menu", jPanel40);

        Restaurant.addTab("Pizza Hut", Pizza_hut);

        jPanel39.setBackground(new java.awt.Color(255, 255, 255));
        jPanel39.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbtnVeg_Chilli_Cheese.setText("Veg Chilli Cheese");
        jbtnVeg_Chilli_Cheese.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnVeg_Chilli_Cheese.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnVeg_Chilli_CheeseActionPerformed(evt);
            }
        });
        jPanel39.add(jbtnVeg_Chilli_Cheese, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 11, 106, 72));

        jbtnPaneer_King.setText("Paneer King");
        jbtnPaneer_King.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnPaneer_King.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPaneer_KingActionPerformed(evt);
            }
        });
        jPanel39.add(jbtnPaneer_King, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 11, 109, 72));

        jbtnChicken_Tandoor_Grill.setText("Chicken Tandoor Grill");
        jbtnChicken_Tandoor_Grill.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnChicken_Tandoor_Grill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnChicken_Tandoor_GrillActionPerformed(evt);
            }
        });
        jPanel39.add(jbtnChicken_Tandoor_Grill, new org.netbeans.lib.awtextra.AbsoluteConstraints(269, 11, -1, 72));

        jbtnBK_Veggie.setText("BK Veggie");
        jbtnBK_Veggie.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnBK_Veggie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBK_VeggieActionPerformed(evt);
            }
        });
        jPanel39.add(jbtnBK_Veggie, new org.netbeans.lib.awtextra.AbsoluteConstraints(269, 111, 107, 72));

        jbtnVeg_Suprise.setText("Veg Suprise");
        jbtnVeg_Suprise.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnVeg_Suprise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnVeg_SupriseActionPerformed(evt);
            }
        });
        jPanel39.add(jbtnVeg_Suprise, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 111, 104, 72));

        jbtnChicken_Chilli.setText("Chicken Chilli");
        jbtnChicken_Chilli.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnChicken_Chilli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnChicken_ChilliActionPerformed(evt);
            }
        });
        jPanel39.add(jbtnChicken_Chilli, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 111, 105, 72));

        jbtnCrspy_Veg.setText("Crspy Veg");
        jbtnCrspy_Veg.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnCrspy_Veg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCrspy_VegActionPerformed(evt);
            }
        });
        jPanel39.add(jbtnCrspy_Veg, new org.netbeans.lib.awtextra.AbsoluteConstraints(269, 201, 107, 75));

        jbtnCrispy_Veg_Supreme.setText("Crispy Veg Supreme");
        jbtnCrispy_Veg_Supreme.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnCrispy_Veg_Supreme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCrispy_Veg_SupremejButton35ActionPerformed(evt);
            }
        });
        jPanel39.add(jbtnCrispy_Veg_Supreme, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 201, 109, 75));

        jbtnBK_Grill_Chicken.setText("BK Grill Chicken");
        jbtnBK_Grill_Chicken.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnBK_Grill_Chicken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBK_Grill_ChickenjButton36ActionPerformed(evt);
            }
        });
        jPanel39.add(jbtnBK_Grill_Chicken, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 201, 110, 75));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Burger King.png"))); // NOI18N
        jPanel39.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 350, 280));

        BurgerKing.addTab("Menu", jPanel39);

        Restaurant.addTab("Burger King", BurgerKing);

        jPanel33.setBackground(new java.awt.Color(255, 255, 255));
        jPanel33.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbtnchicken_fillet.setText("Chicken Fillet");
        jbtnchicken_fillet.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnchicken_fillet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnchicken_filletActionPerformed(evt);
            }
        });
        jPanel33.add(jbtnchicken_fillet, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 11, 106, 72));

        jbtnchicken_zinger.setText("Chicken Zinger ");
        jbtnchicken_zinger.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnchicken_zinger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnchicken_zingerActionPerformed(evt);
            }
        });
        jPanel33.add(jbtnchicken_zinger, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 11, 109, 72));

        jbtn_mighty_fillet.setText("Mighty Fillet");
        jbtn_mighty_fillet.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtn_mighty_fillet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_mighty_filletActionPerformed(evt);
            }
        });
        jPanel33.add(jbtn_mighty_fillet, new org.netbeans.lib.awtextra.AbsoluteConstraints(269, 11, 104, 72));

        jbtnzinger_supreme.setText("Zinger Supreme");
        jbtnzinger_supreme.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnzinger_supreme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnzinger_supremeActionPerformed(evt);
            }
        });
        jPanel33.add(jbtnzinger_supreme, new org.netbeans.lib.awtextra.AbsoluteConstraints(269, 111, 104, 72));

        jbtntoasted_twister.setText("Toasted Twister");
        jbtntoasted_twister.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtntoasted_twister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtntoasted_twisterActionPerformed(evt);
            }
        });
        jPanel33.add(jbtntoasted_twister, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 111, 104, 72));

        jbtnfillet_supreme.setText("Fillet Supreme");
        jbtnfillet_supreme.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnfillet_supreme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnfillet_supremeActionPerformed(evt);
            }
        });
        jPanel33.add(jbtnfillet_supreme, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 111, 105, 72));

        jbtnbigfiller_jalapeno.setText("Big Filler Jalapeno");
        jbtnbigfiller_jalapeno.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnbigfiller_jalapeno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnbigfiller_jalapenoActionPerformed(evt);
            }
        });
        jPanel33.add(jbtnbigfiller_jalapeno, new org.netbeans.lib.awtextra.AbsoluteConstraints(269, 201, 104, 77));

        jbtnbigfiller_supreme.setText("Big Filler Supreme ");
        jbtnbigfiller_supreme.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnbigfiller_supreme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnbigfiller_supremejButton35ActionPerformed(evt);
            }
        });
        jPanel33.add(jbtnbigfiller_supreme, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 201, 109, 77));

        jbtnbigfiller_classic.setText("Big Filler Classic");
        jbtnbigfiller_classic.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnbigfiller_classic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnbigfiller_classicjButton36ActionPerformed(evt);
            }
        });
        jPanel33.add(jbtnbigfiller_classic, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 201, 110, 75));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/674_kfc.jpg"))); // NOI18N
        jPanel33.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 380, 280));

        KFC.addTab("Menu", jPanel33);

        Restaurant.addTab("KFC", KFC);

        jPanel41.setBackground(new java.awt.Color(255, 255, 255));
        jPanel41.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbtnCombo_Mexicana_Wrap.setText("Combo Mexicana Wrap");
        jbtnCombo_Mexicana_Wrap.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnCombo_Mexicana_Wrap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCombo_Mexicana_WrapActionPerformed(evt);
            }
        });
        jPanel41.add(jbtnCombo_Mexicana_Wrap, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 122, 72));

        jbtnCombo_Tex_Wrap.setText("Combo Tex Wrap");
        jbtnCombo_Tex_Wrap.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnCombo_Tex_Wrap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCombo_Tex_WrapActionPerformed(evt);
            }
        });
        jPanel41.add(jbtnCombo_Tex_Wrap, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 11, 109, 72));

        jbtnCombo_Tex_Sampler.setText("Combo Tex Sampler");
        jbtnCombo_Tex_Sampler.setToolTipText("");
        jbtnCombo_Tex_Sampler.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnCombo_Tex_Sampler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCombo_Tex_SamplerActionPerformed(evt);
            }
        });
        jPanel41.add(jbtnCombo_Tex_Sampler, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 11, -1, 72));

        jbtnTender_Wrap.setText("Tender Wrap");
        jbtnTender_Wrap.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnTender_Wrap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnTender_WrapActionPerformed(evt);
            }
        });
        jPanel41.add(jbtnTender_Wrap, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 111, 101, 72));

        jbtnNAIS_Sample.setText("NAIS Sample");
        jbtnNAIS_Sample.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnNAIS_Sample.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnNAIS_SampleActionPerformed(evt);
            }
        });
        jPanel41.add(jbtnNAIS_Sample, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 111, 110, 72));

        jbtnCombo_Tex_Supreme.setText("Combo Tex Supreme");
        jbtnCombo_Tex_Supreme.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnCombo_Tex_Supreme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCombo_Tex_SupremeActionPerformed(evt);
            }
        });
        jPanel41.add(jbtnCombo_Tex_Supreme, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 111, 121, 72));

        jbtnFiesta_Feast.setText("Fiesta Feast");
        jbtnFiesta_Feast.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnFiesta_Feast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnFiesta_FeastActionPerformed(evt);
            }
        });
        jPanel41.add(jbtnFiesta_Feast, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 202, 101, 75));

        jbtnMinuman.setText("Minuman");
        jbtnMinuman.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnMinuman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnMinumanjButton35ActionPerformed(evt);
            }
        });
        jPanel41.add(jbtnMinuman, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 202, 109, 75));

        jbtnCrunchy_Deals.setText("Crunchy Deals");
        jbtnCrunchy_Deals.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnCrunchy_Deals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCrunchy_DealsjButton36ActionPerformed(evt);
            }
        });
        jPanel41.add(jbtnCrunchy_Deals, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 202, 126, 75));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Texas.png"))); // NOI18N
        jPanel41.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 310, 280));

        TEXAS.addTab("Menu", jPanel41);

        Restaurant.addTab("TEXAS", TEXAS);

        jPanel42.setBackground(new java.awt.Color(255, 255, 255));
        jPanel42.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbtnFresh_Juice.setText("Fresh Juice");
        jbtnFresh_Juice.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnFresh_Juice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnFresh_JuiceActionPerformed(evt);
            }
        });
        jPanel42.add(jbtnFresh_Juice, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 11, 106, 72));

        jbtnMango.setText("Mango");
        jbtnMango.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnMango.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnMangoActionPerformed(evt);
            }
        });
        jPanel42.add(jbtnMango, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 11, 109, 72));

        jbtnIced_Latte.setText("Iced Latte");
        jbtnIced_Latte.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnIced_Latte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnIced_LatteActionPerformed(evt);
            }
        });
        jPanel42.add(jbtnIced_Latte, new org.netbeans.lib.awtextra.AbsoluteConstraints(271, 11, 104, 72));

        jbtnIced_Chocolate.setText("Iced Chocolate");
        jbtnIced_Chocolate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnIced_Chocolate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnIced_ChocolateActionPerformed(evt);
            }
        });
        jPanel42.add(jbtnIced_Chocolate, new org.netbeans.lib.awtextra.AbsoluteConstraints(271, 111, 104, 72));

        Iced_Coffe_Toffe.setText("Iced Coffe Toffe");
        Iced_Coffe_Toffe.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Iced_Coffe_Toffe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Iced_Coffe_ToffeActionPerformed(evt);
            }
        });
        jPanel42.add(Iced_Coffe_Toffe, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 111, 112, 72));

        jbtnIced_Mochaccino.setText("Iced Mochaccino");
        jbtnIced_Mochaccino.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnIced_Mochaccino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnIced_MochaccinoActionPerformed(evt);
            }
        });
        jPanel42.add(jbtnIced_Mochaccino, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 111, 105, 72));

        jbtnSunShine.setText("SunShine");
        jbtnSunShine.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnSunShine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSunShineActionPerformed(evt);
            }
        });
        jPanel42.add(jbtnSunShine, new org.netbeans.lib.awtextra.AbsoluteConstraints(271, 201, 104, 67));

        jbtnMilk_Shake.setText("Milk Shake");
        jbtnMilk_Shake.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnMilk_Shake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnMilk_ShakejButton35ActionPerformed(evt);
            }
        });
        jPanel42.add(jbtnMilk_Shake, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 201, 109, 67));

        jbtnOreio_Twist.setText("Oreio Twist");
        jbtnOreio_Twist.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnOreio_Twist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnOreio_TwistjButton36ActionPerformed(evt);
            }
        });
        jPanel42.add(jbtnOreio_Twist, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 201, 110, 67));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/La Poire.jpeg"))); // NOI18N
        jPanel42.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 320, 280));

        la_poire.addTab("Menu", jPanel42);

        Restaurant.addTab("La-Poire", la_poire);

        jPanel44.setBackground(new java.awt.Color(255, 255, 255));
        jPanel44.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbtnCORTO.setText("CORTO");
        jbtnCORTO.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnCORTO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCORTOActionPerformed(evt);
            }
        });
        jPanel44.add(jbtnCORTO, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 11, 106, 72));

        jbtnMocha_Corto.setText("Mocha Corto");
        jbtnMocha_Corto.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnMocha_Corto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnMocha_CortoActionPerformed(evt);
            }
        });
        jPanel44.add(jbtnMocha_Corto, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 11, 109, 72));

        jbtnBlack_Corto.setText("Black Corto");
        jbtnBlack_Corto.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnBlack_Corto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBlack_CortoActionPerformed(evt);
            }
        });
        jPanel44.add(jbtnBlack_Corto, new org.netbeans.lib.awtextra.AbsoluteConstraints(271, 11, 104, 72));

        jbtnMolten_Cake.setText("Molten Cake");
        jbtnMolten_Cake.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnMolten_Cake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnMolten_CakeActionPerformed(evt);
            }
        });
        jPanel44.add(jbtnMolten_Cake, new org.netbeans.lib.awtextra.AbsoluteConstraints(271, 111, 104, 72));

        jbtnMacchilato.setText("Macchilato");
        jbtnMacchilato.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnMacchilato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnMacchilatoActionPerformed(evt);
            }
        });
        jPanel44.add(jbtnMacchilato, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 111, 112, 72));

        jbtnEspresso.setText("Espresso");
        jbtnEspresso.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnEspresso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEspressoActionPerformed(evt);
            }
        });
        jPanel44.add(jbtnEspresso, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 111, 105, 72));

        jbtnBaby_Ccino.setText("Baby Ccino");
        jbtnBaby_Ccino.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnBaby_Ccino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBaby_CcinoActionPerformed(evt);
            }
        });
        jPanel44.add(jbtnBaby_Ccino, new org.netbeans.lib.awtextra.AbsoluteConstraints(271, 201, 104, 67));

        jbtnIce_Cream.setText("Ice Cream");
        jbtnIce_Cream.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnIce_Cream.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnIce_CreamjButton35ActionPerformed(evt);
            }
        });
        jPanel44.add(jbtnIce_Cream, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 201, 109, 67));

        jbtnFlavour.setText("Flavour");
        jbtnFlavour.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbtnFlavour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnFlavourjButton36ActionPerformed(evt);
            }
        });
        jPanel44.add(jbtnFlavour, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 201, 110, 67));

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/costa caffe.jpg"))); // NOI18N
        jPanel44.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 350, 280));

        costa_cafe.addTab("Menu", jPanel44);

        Restaurant.addTab("Costa Cafe", costa_cafe);

        jPanel2.add(Restaurant, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jPanel4.setBackground(new java.awt.Color(0, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Cash");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 93, 135, -1));

        paymentmethodCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Visa", "Master Card", "Promo Code" }));
        paymentmethodCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentmethodComboActionPerformed(evt);
            }
        });
        jPanel4.add(paymentmethodCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 23, 149, 29));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Payment Method");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 13, -1, 47));

        cashText.setEditable(false);
        cashText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashTextActionPerformed(evt);
            }
        });
        jPanel4.add(cashText, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 93, 189, 29));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Change");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 143, 135, -1));

        changeText.setEditable(false);
        changeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeTextActionPerformed(evt);
            }
        });
        jPanel4.add(changeText, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 143, 189, 29));
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, 190));

        jPanel3.setBackground(new java.awt.Color(255, 204, 255));

        jTable1.setBackground(new java.awt.Color(204, 204, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Short.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        ReciptText.setEditable(false);
        ReciptText.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
            .addComponent(ReciptText)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ReciptText, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(0, 204, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Tax");
        jPanel5.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 85, 135, -1));

        taxText.setEditable(false);
        jPanel5.add(taxText, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 85, 158, 29));

        subtotalText.setEditable(false);
        jPanel5.add(subtotalText, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 25, 158, 29));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("SubTotal");
        jPanel5.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 25, 135, -1));

        totalText.setEditable(false);
        jPanel5.add(totalText, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 141, 158, 29));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setText("Total");
        jPanel5.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 141, 135, -1));
        jPanel5.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 370, 190));

        jPanel7.setBackground(new java.awt.Color(0, 204, 204));
        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbtn7.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jbtn7.setText("7");
        jbtn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn7ActionPerformed(evt);
            }
        });
        jPanel7.add(jbtn7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 81, 86));

        jbtn8.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jbtn8.setText("8");
        jbtn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn8ActionPerformed(evt);
            }
        });
        jPanel7.add(jbtn8, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 81, 86));

        jbtn9.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jbtn9.setText("9");
        jbtn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn9ActionPerformed(evt);
            }
        });
        jPanel7.add(jbtn9, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 81, 86));

        jbtn6.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jbtn6.setText("6");
        jbtn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn6ActionPerformed(evt);
            }
        });
        jPanel7.add(jbtn6, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, 81, 86));

        jbtn4.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jbtn4.setText("4");
        jbtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn4ActionPerformed(evt);
            }
        });
        jPanel7.add(jbtn4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 81, 86));

        jbtn5.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jbtn5.setText("5");
        jbtn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn5ActionPerformed(evt);
            }
        });
        jPanel7.add(jbtn5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 81, 86));

        jbtn3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jbtn3.setText("3");
        jbtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn3ActionPerformed(evt);
            }
        });
        jPanel7.add(jbtn3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 190, 81, 86));

        jbtn1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jbtn1.setText("1");
        jbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn1ActionPerformed(evt);
            }
        });
        jPanel7.add(jbtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 81, 86));

        jbtn2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jbtn2.setText("2");
        jbtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn2ActionPerformed(evt);
            }
        });
        jPanel7.add(jbtn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, 81, 86));

        jbtn_dot.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jbtn_dot.setText(".");
        jbtn_dot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_dotActionPerformed(evt);
            }
        });
        jPanel7.add(jbtn_dot, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 290, 81, 86));

        jbtn0.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jbtn0.setText("0");
        jbtn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn0ActionPerformed(evt);
            }
        });
        jPanel7.add(jbtn0, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 81, 86));

        jbtnC.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jbtnC.setText("C");
        jbtnC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCActionPerformed(evt);
            }
        });
        jPanel7.add(jbtnC, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 290, 81, 86));
        jPanel7.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 380));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1270, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(369, 369, 369)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(7, 7, 7)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(11, 11, 11)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(11, 11, 11)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 637, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(11, 11, 11)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(19, 19, 19)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(10, 10, 10)
                                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnprintActionPerformed
        // TODO add your handling code here
        //new thing

        if (!cashText.getText().equals("")) {
            MessageFormat header = new MessageFormat("Please Wait ...");
            MessageFormat footer = new MessageFormat("Page {0, number, integer}");
            try {
                //make printer to print table (fatorah)
                jTable1.print(JTable.PrintMode.NORMAL, header, footer);

            } catch (Exception e) {
                System.err.format("No Printer Found", e.getMessage());
            }
        }
    }//GEN-LAST:event_jbtnprintActionPerformed

    
    
    private void jbtncheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtncheckActionPerformed
        // TODO add your handling code here:    
       try {
            if (paymentmethodCombo.getSelectedItem().equals("Cash")) {
                Change();
            } else {
                changeText.setText("");
                cashText.setText("");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "");
        }
    }//GEN-LAST:event_jbtncheckActionPerformed

    private void jbtnresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnresetActionPerformed
        // TODO add your handling code here:
        //reset the table to make new order
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); //call for edit jTable
        Object orders = jTable1.getSelectedRow();
        
        model.setRowCount(0);//remove all rows and start from one
        
        
      //step #2: delete
         Connection con =null;
         Statement stmt =null;
         
         try{
             con = DriverManager.getConnection(url);
             stmt = con.createStatement();
             String query = "DELETE FROM ORDERS WHERE Quantity='1';";
             int affectedRows = stmt.executeUpdate(query);
             if(affectedRows >= 1)
             {
                 JOptionPane.showMessageDialog(this, affectedRows +" Order(s) Successful Deletation !!! ");
             }
             else
             {
                 JOptionPane.showMessageDialog(this, "There is no Orders !!!");
             }
         }
         catch(Exception ex)
         {
             JOptionPane.showConfirmDialog(this, ex.getMessage());
         }
         finally
         {
           if(con!=null){try{ con.close(); }catch(Exception ex){}}
           if(stmt!=null){try{ stmt.close(); }catch(Exception ex){}}
         } 
        
        
        //all of the text field were reset
        cashText.setText("");
        taxText.setText("");
        totalText.setText("");
        subtotalText.setText("");
        changeText.setText("");
        ReciptText.setText("");
    }//GEN-LAST:event_jbtnresetActionPerformed
    private void jbtnremoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnremoveActionPerformed
        // TODO add your handling code here:
       
         Connection con =null;
         Statement stmt =null;
         
         try{
             
             con = DriverManager.getConnection(url);
             stmt = con.createStatement();                             //Item
             String query = "DELETE FROM ORDERS"           //row          //col
             + " WHERE Item='"+jTable1.getValueAt(jTable1.getRowCount()-1, 0)+"';";
             int affectedRows = stmt.executeUpdate(query); //0,1,2,3,4,5,6
             if(affectedRows == 1)                         // 7-->   index == 7-1 = 6 
             {
                 JOptionPane.showMessageDialog(this, affectedRows +" Order(s) Successful Deletation !!! ");
                 return;
             }
             else
             {
                 JOptionPane.showMessageDialog(this, "There is No Order in Table");
                 return;
             }
             
         }
         catch(Exception ex)
         {
             JOptionPane.showMessageDialog(this, ex.getMessage());
         }
         finally
         {
           if(con!=null){try{ con.close(); }catch(Exception ex){}}
           if(stmt!=null){try{ stmt.close(); }catch(Exception ex){}}
         }
        
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); //call for edit jTable
        
        int RemoveItem = jTable1.getSelectedRow();
        
        try {
            if (RemoveItem >= 0) { //if there is an item remove it
                model.removeRow(RemoveItem);
            }  
            ItemCost();
            if (paymentmethodCombo.getSelectedItem().equals("Cash")) {
                Change();
            } else {
                cashText.setText("");
                changeText.setText("");
            }
        } catch (Exception e) {
            
        }
      
    }//GEN-LAST:event_jbtnremoveActionPerformed

    private void jbtnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnexitActionPerformed
        // TODO add your handling code here:
        My_System_User MSU = new My_System_User();
        MSU.show();
        dispose();

        //        if(JOptionPane.showConfirmDialog(this,"You Sure want ot exit","Check Out",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION){
            //            System.exit(0); //optional
            //            //switch to checkout to any user ??what you choose
            //
            //        }
    }//GEN-LAST:event_jbtnexitActionPerformed

    private void jbtnCheese_LoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCheese_LoverActionPerformed
        // TODO add your handling code here:
        double PriceOfItem = 12.33;
        String Item = "Cheese Lover";
        String Quantity ="1";

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
        
        
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnCheese_LoverActionPerformed

    private void jbtnBacon_LoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBacon_LoverActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 14.21;

        String Item = "Bacon Lover";
        String Quantity = "1";
        
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
        
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnBacon_LoverActionPerformed

    private void jbtnVeggie_LoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnVeggie_LoverActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 16.6;

        String Item = "Veggie Lover";
        String Quantity = "1";
        
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
        
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnVeggie_LoverActionPerformed

    private void jbtnHaxatian_SupremeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnHaxatian_SupremeActionPerformed
        // TODO add your handling code here:
        double PriceOfItem = 30.41;
        String Item = "Haxatian Supreme";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
        
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }

    }//GEN-LAST:event_jbtnHaxatian_SupremeActionPerformed

    private void jbtnSuper_SupremeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSuper_SupremeActionPerformed
        // TODO add your handling code here:

        String Item = "Super Supreme";
        String Quantity = "1";
        
        double PriceOfItem = 40.12;

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnSuper_SupremeActionPerformed

    private void jbtnSupremeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSupremeActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 35.3;
        String Item = "Supreme";
        String Quantity = "1";

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
        
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnSupremeActionPerformed

    private void jbtnMeat_LoversActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnMeat_LoversActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 23.3;
        String Item = "Meat Lover";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{"Meat Lover", "1", PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnMeat_LoversActionPerformed

    private void jbtnBacon_MargheritajButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBacon_MargheritajButton35ActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 33.40;
        String Item = "Bacon Margherita";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
        
    }//GEN-LAST:event_jbtnBacon_MargheritajButton35ActionPerformed

    private void jbtn_Chicken_SupremejButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_Chicken_SupremejButton36ActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 20.40;
        String Item = "Chicken Supreme";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtn_Chicken_SupremejButton36ActionPerformed

    private void jbtnVeg_Chilli_CheeseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnVeg_Chilli_CheeseActionPerformed
        // TODO add your handling code here:

        String Item = "Veg Chilli Cheese";
        String Quantity = "1";
        double PriceOfItem = 15.40;

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{"Veg Chilli Cheese", "1", PriceOfItem});
        ItemCost();
        
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnVeg_Chilli_CheeseActionPerformed

    private void jbtnPaneer_KingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPaneer_KingActionPerformed
        // TODO add your handling code here:
        String Item  ="Paneer King";
        String Quantity = "1";
        double PriceOfItem = 13.40;

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
        
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnPaneer_KingActionPerformed

    private void jbtnChicken_Tandoor_GrillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnChicken_Tandoor_GrillActionPerformed
        // TODO add your handling code here:

        String Item = "Chicken Tandoor Grill";
        String Quantity = "1";
        double PriceOfItem = 16.55;

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
        
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnChicken_Tandoor_GrillActionPerformed

    private void jbtnBK_VeggieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBK_VeggieActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 20.48;
        String Item = "BK Veggie";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{"BK Veggie", "1", PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnBK_VeggieActionPerformed

    private void jbtnVeg_SupriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnVeg_SupriseActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 24.88;
        String Item = "Veg Suprise";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnVeg_SupriseActionPerformed

    private void jbtnChicken_ChilliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnChicken_ChilliActionPerformed
        // TODO add your handling code here:
        String Item = "Chicken Chilli";
        String Quantity = "1";
        double PriceOfItem = 23.40;

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnChicken_ChilliActionPerformed

    private void jbtnCrspy_VegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCrspy_VegActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 26.32;
        String Item = "Crispy Veg";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item,Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnCrspy_VegActionPerformed

    private void jbtnCrispy_Veg_SupremejButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCrispy_Veg_SupremejButton35ActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 36.88;
        String Item = "Crispy Veg Supreme";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnCrispy_Veg_SupremejButton35ActionPerformed

    private void jbtnBK_Grill_ChickenjButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBK_Grill_ChickenjButton36ActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 20.00;
        String Item = "BK Grill Chicken";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{"BK Grill Chicken ", "1", PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnBK_Grill_ChickenjButton36ActionPerformed

    private void jbtnchicken_filletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnchicken_filletActionPerformed
        // TODO add your handling code here:
        double PriceOfItem = 3.40;
        String Item = "Chicken Fillet";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
        
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnchicken_filletActionPerformed

    private void jbtnchicken_zingerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnchicken_zingerActionPerformed
        // TODO add your handling code here:
        double PriceOfItem = 5.00;
        String Item = "Chicken Zinger";
        String Quantity = "1";
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnchicken_zingerActionPerformed

    private void jbtn_mighty_filletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_mighty_filletActionPerformed
        // TODO add your handling code here:
        double PriceOfItem = 6.30;
        String Item  ="Mighty Fillet";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtn_mighty_filletActionPerformed

    private void jbtnzinger_supremeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnzinger_supremeActionPerformed
        // TODO add your handling code here:
        double PriceOfItem = 10.50;
        String Item ="Zinger Supreme";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnzinger_supremeActionPerformed

    private void jbtntoasted_twisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtntoasted_twisterActionPerformed
        // TODO add your handling code here:
        double PriceOfItem = 6.00;
        String Item = "Toasted Twister";
        String Quantity ="1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtntoasted_twisterActionPerformed

    private void jbtnfillet_supremeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnfillet_supremeActionPerformed
        // TODO add your handling code here:
        double PriceOfItem = 8.40;
        String Item = "Fillet Supreme";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item,Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnfillet_supremeActionPerformed

    private void jbtnbigfiller_jalapenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnbigfiller_jalapenoActionPerformed
        // TODO add your handling code here:
        double PriceOfItem = 13.40;
        String Item = "Big Filler Jalapeno";
        String Quantity ="1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnbigfiller_jalapenoActionPerformed

    private void jbtnbigfiller_supremejButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnbigfiller_supremejButton35ActionPerformed
        // TODO add your handling code here:
        double PriceOfItem = 15.40;
        String Item = "Big Filler Supreme";
        String Quantity = "1";
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnbigfiller_supremejButton35ActionPerformed

    private void jbtnbigfiller_classicjButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnbigfiller_classicjButton36ActionPerformed
        // TODO add your handling code here:
        double PriceOfItem = 11.40;
        String Item = "Big Filler Classic";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnbigfiller_classicjButton36ActionPerformed

    private void jbtnCombo_Mexicana_WrapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCombo_Mexicana_WrapActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 45.40;
        String Item = "Combo Mexicana Wrap";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnCombo_Mexicana_WrapActionPerformed

    private void jbtnCombo_Tex_WrapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCombo_Tex_WrapActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 25.40;
        String Item = "Combo Tex Wrap";
        String Quantity ="1";
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnCombo_Tex_WrapActionPerformed

    private void jbtnCombo_Tex_SamplerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCombo_Tex_SamplerActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 23.40;
        String Item = "Combo Tex Sampler";
        String Quantity = "1";
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnCombo_Tex_SamplerActionPerformed

    private void jbtnTender_WrapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnTender_WrapActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 25.40;
        String Item = "Tender Wrap";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnTender_WrapActionPerformed

    private void jbtnNAIS_SampleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnNAIS_SampleActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 60.40;
        String Item = "NAIS Sample";
        String Quantity = "1";
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item,Quantity, PriceOfItem});
        ItemCost();
        
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnNAIS_SampleActionPerformed

    private void jbtnCombo_Tex_SupremeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCombo_Tex_SupremeActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 34.40;
        String Item = "Combo Tex Supreme";
        String Quantity ="1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnCombo_Tex_SupremeActionPerformed

    private void jbtnFiesta_FeastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnFiesta_FeastActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 12.40;
        String Item = "Fiesta Feast";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnFiesta_FeastActionPerformed

    private void jbtnMinumanjButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnMinumanjButton35ActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 15.00;
        String Item = "Minuman";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnMinumanjButton35ActionPerformed

    private void jbtnCrunchy_DealsjButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCrunchy_DealsjButton36ActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 50.44;
        String Item = "Crunchy Deals";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item,Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnCrunchy_DealsjButton36ActionPerformed

    private void jbtnFresh_JuiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnFresh_JuiceActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 10.00;
        String Item = "Fresh Juice";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item,Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnFresh_JuiceActionPerformed

    private void jbtnMangoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnMangoActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 15.40;
        String Item = "Mango";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item,Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnMangoActionPerformed

    private void jbtnIced_LatteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnIced_LatteActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 20.00;
        String Item  ="Iced Latte";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnIced_LatteActionPerformed

    private void jbtnIced_ChocolateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnIced_ChocolateActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 15.00;
        String Item = "Iced Chocolate";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item,Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnIced_ChocolateActionPerformed

    private void Iced_Coffe_ToffeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Iced_Coffe_ToffeActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 20.42;
        String Item = "Iced Coffe Toffe";
        String Quantity ="1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_Iced_Coffe_ToffeActionPerformed

    private void jbtnIced_MochaccinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnIced_MochaccinoActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 13.40;
        String Item = "Iced Mochaccino";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{"Iced Mochaccino", "1", PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnIced_MochaccinoActionPerformed

    private void jbtnSunShineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSunShineActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 10.67;
        String Item = "SunShine";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item,Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnSunShineActionPerformed

    private void jbtnMilk_ShakejButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnMilk_ShakejButton35ActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 20.34;
        String Item = "Milk Shake";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item,Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnMilk_ShakejButton35ActionPerformed

    private void jbtnOreio_TwistjButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnOreio_TwistjButton36ActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 10.40;
        String Item = "Oreio Twist";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item,Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnOreio_TwistjButton36ActionPerformed

    private void jbtnCORTOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCORTOActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 11.40;
        String Item = "CORTO";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item,Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnCORTOActionPerformed

    private void jbtnMocha_CortoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnMocha_CortoActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 14.40;
        String Item = "Mocha Corto";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item, Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnMocha_CortoActionPerformed

    private void jbtnBlack_CortoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBlack_CortoActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 13.40;
        String Item = "Black Corto";
        String Quantity = "1";
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item,Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnBlack_CortoActionPerformed

    private void jbtnMolten_CakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnMolten_CakeActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 30.40;
        String Item = "Molten Cake";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item,Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnMolten_CakeActionPerformed

    private void jbtnMacchilatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnMacchilatoActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 25.00;
        String Item = "Macchlato";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item,Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnMacchilatoActionPerformed

    private void jbtnEspressoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEspressoActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 15.40;
        String Item = "Espresso";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item,Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnEspressoActionPerformed

    private void jbtnBaby_CcinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBaby_CcinoActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 20.40;
        String Item = "Baby Ccino";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item,Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnBaby_CcinoActionPerformed

    private void jbtnIce_CreamjButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnIce_CreamjButton35ActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 12.40;
        String Item = "Ice Cream";
        String Quantity = "1";
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item,Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnIce_CreamjButton35ActionPerformed

    private void jbtnFlavourjButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnFlavourjButton36ActionPerformed
        // TODO add your handling code here:

        double PriceOfItem = 26.40;
        String Item = "Flavour";
        String Quantity = "1";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //need to add import of defaulttablemodel
        model.addRow(new Object[]{Item,Quantity, PriceOfItem});
        ItemCost();
         Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ORDERS VALUES"
                    + "('" + Item + "','" + Quantity + "','" +PriceOfItem+"')";
                    

            int affectRows = stmt.executeUpdate(query);

            
 
            if (affectRows == 1) {
                JOptionPane.showMessageDialog(this, "Insert "+Item);
            }else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                    
                }
                
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                    
                }
                
            }
        }
    }//GEN-LAST:event_jbtnFlavourjButton36ActionPerformed

    private void paymentmethodComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentmethodComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paymentmethodComboActionPerformed

    private void cashTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cashTextActionPerformed

    private void changeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeTextActionPerformed

    }//GEN-LAST:event_changeTextActionPerformed

    private void jbtn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn7ActionPerformed

        String number = cashText.getText();
        if (number == "") {
            cashText.setText(jbtn7.getText());
        } else {
            number = cashText.getText() + jbtn7.getText();
            cashText.setText(number);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jbtn7ActionPerformed

    private void jbtn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn8ActionPerformed
        // TODO add your handling code here:

        String number = cashText.getText();
        if (number == "") {
            cashText.setText(jbtn8.getText());
        } else {
            number = cashText.getText() + jbtn8.getText();
            cashText.setText(number);
        }
    }//GEN-LAST:event_jbtn8ActionPerformed

    private void jbtn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn9ActionPerformed
        // TODO add your handling code here:

        String number = cashText.getText();
        if (number == "") {
            cashText.setText(jbtn9.getText());
        } else {
            number = cashText.getText() + jbtn9.getText();
            cashText.setText(number);
        }
    }//GEN-LAST:event_jbtn9ActionPerformed

    private void jbtn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn6ActionPerformed
        // TODO add your handling code here:

        String number = cashText.getText();
        if (number == "") {
            cashText.setText(jbtn6.getText());
        } else {
            number = cashText.getText() + jbtn6.getText();
            cashText.setText(number);
        }
    }//GEN-LAST:event_jbtn6ActionPerformed

    private void jbtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn4ActionPerformed
        // TODO add your handling code here:

        String number = cashText.getText();
        if (number == "") {
            cashText.setText(jbtn4.getText());
        } else {
            number = cashText.getText() + jbtn4.getText();
            cashText.setText(number);
        }
    }//GEN-LAST:event_jbtn4ActionPerformed

    private void jbtn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn5ActionPerformed
        // TODO add your handling code here:

        String number = cashText.getText();
        if (number == "") {
            cashText.setText(jbtn5.getText());
        } else {
            number = cashText.getText() + jbtn5.getText();
            cashText.setText(number);
        }
    }//GEN-LAST:event_jbtn5ActionPerformed

    private void jbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn3ActionPerformed
        // TODO add your handling code here:

        String number = cashText.getText();
        if (number == "") {
            cashText.setText(jbtn3.getText());
        } else {
            number = cashText.getText() + jbtn3.getText();
            cashText.setText(number);
        }
    }//GEN-LAST:event_jbtn3ActionPerformed

    private void jbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn1ActionPerformed
        // TODO add your handling code here:

        String number = cashText.getText();
        if (number == "") {
            cashText.setText(jbtn1.getText());
        } else {
            number = cashText.getText() + jbtn1.getText();
            cashText.setText(number);
        }
    }//GEN-LAST:event_jbtn1ActionPerformed

    private void jbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn2ActionPerformed
        // TODO add your handling code here:

        String number = cashText.getText();
        if (number == "") {
            cashText.setText(jbtn2.getText());
        } else {
            number = cashText.getText() + jbtn2.getText();
            cashText.setText(number);
        }
    }//GEN-LAST:event_jbtn2ActionPerformed

    private void jbtn_dotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_dotActionPerformed
        // TODO add your handling code here:
        //not
        if (!cashText.getText().contains(".")) {
            cashText.setText(cashText.getText() + jbtn_dot.getText());
        }
    }//GEN-LAST:event_jbtn_dotActionPerformed

    private void jbtn0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn0ActionPerformed
        // TODO add your handling code here:

        String number = cashText.getText();
        if (number == "") {
            cashText.setText(jbtn0.getText());
        } else {
            number = cashText.getText() + jbtn0.getText();
            cashText.setText(number);
        }
    }//GEN-LAST:event_jbtn0ActionPerformed

    private void jbtnCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCActionPerformed
        // TODO add your handling code here:
        cashText.setText("");
        changeText.setText("");
    }//GEN-LAST:event_jbtnCActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(systemuser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(systemuser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(systemuser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(systemuser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new systemuser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane BurgerKing;
    private javax.swing.JButton Iced_Coffe_Toffe;
    private javax.swing.JTabbedPane KFC;
    private javax.swing.JTabbedPane Pizza_hut;
    private javax.swing.JTextField ReciptText;
    private javax.swing.JTabbedPane Restaurant;
    private javax.swing.JTabbedPane TEXAS;
    private javax.swing.JTextField cashText;
    private javax.swing.JTextField changeText;
    private javax.swing.JTabbedPane costa_cafe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbtn0;
    private javax.swing.JButton jbtn1;
    private javax.swing.JButton jbtn2;
    private javax.swing.JButton jbtn3;
    private javax.swing.JButton jbtn4;
    private javax.swing.JButton jbtn5;
    private javax.swing.JButton jbtn6;
    private javax.swing.JButton jbtn7;
    private javax.swing.JButton jbtn8;
    private javax.swing.JButton jbtn9;
    private javax.swing.JButton jbtnBK_Grill_Chicken;
    private javax.swing.JButton jbtnBK_Veggie;
    private javax.swing.JButton jbtnBaby_Ccino;
    private javax.swing.JButton jbtnBacon_Lover;
    private javax.swing.JButton jbtnBacon_Margherita;
    private javax.swing.JButton jbtnBlack_Corto;
    private javax.swing.JButton jbtnC;
    private javax.swing.JButton jbtnCORTO;
    private javax.swing.JButton jbtnCheese_Lover;
    private javax.swing.JButton jbtnChicken_Chilli;
    private javax.swing.JButton jbtnChicken_Tandoor_Grill;
    private javax.swing.JButton jbtnCombo_Mexicana_Wrap;
    private javax.swing.JButton jbtnCombo_Tex_Sampler;
    private javax.swing.JButton jbtnCombo_Tex_Supreme;
    private javax.swing.JButton jbtnCombo_Tex_Wrap;
    private javax.swing.JButton jbtnCrispy_Veg_Supreme;
    private javax.swing.JButton jbtnCrspy_Veg;
    private javax.swing.JButton jbtnCrunchy_Deals;
    private javax.swing.JButton jbtnEspresso;
    private javax.swing.JButton jbtnFiesta_Feast;
    private javax.swing.JButton jbtnFlavour;
    private javax.swing.JButton jbtnFresh_Juice;
    private javax.swing.JButton jbtnHaxatian_Supreme;
    private javax.swing.JButton jbtnIce_Cream;
    private javax.swing.JButton jbtnIced_Chocolate;
    private javax.swing.JButton jbtnIced_Latte;
    private javax.swing.JButton jbtnIced_Mochaccino;
    private javax.swing.JButton jbtnMacchilato;
    private javax.swing.JButton jbtnMango;
    private javax.swing.JButton jbtnMeat_Lovers;
    private javax.swing.JButton jbtnMilk_Shake;
    private javax.swing.JButton jbtnMinuman;
    private javax.swing.JButton jbtnMocha_Corto;
    private javax.swing.JButton jbtnMolten_Cake;
    private javax.swing.JButton jbtnNAIS_Sample;
    private javax.swing.JButton jbtnOreio_Twist;
    private javax.swing.JButton jbtnPaneer_King;
    private javax.swing.JButton jbtnSunShine;
    private javax.swing.JButton jbtnSuper_Supreme;
    private javax.swing.JButton jbtnSupreme;
    private javax.swing.JButton jbtnTender_Wrap;
    private javax.swing.JButton jbtnVeg_Chilli_Cheese;
    private javax.swing.JButton jbtnVeg_Suprise;
    private javax.swing.JButton jbtnVeggie_Lover;
    private javax.swing.JButton jbtn_Chicken_Supreme;
    private javax.swing.JButton jbtn_dot;
    private javax.swing.JButton jbtn_mighty_fillet;
    private javax.swing.JButton jbtnbigfiller_classic;
    private javax.swing.JButton jbtnbigfiller_jalapeno;
    private javax.swing.JButton jbtnbigfiller_supreme;
    private javax.swing.JButton jbtncheck;
    private javax.swing.JButton jbtnchicken_fillet;
    private javax.swing.JButton jbtnchicken_zinger;
    private javax.swing.JButton jbtnexit;
    private javax.swing.JButton jbtnfillet_supreme;
    private javax.swing.JButton jbtnprint;
    private javax.swing.JButton jbtnremove;
    private javax.swing.JButton jbtnreset;
    private javax.swing.JButton jbtntoasted_twister;
    private javax.swing.JButton jbtnzinger_supreme;
    private javax.swing.JTabbedPane la_poire;
    private javax.swing.JComboBox paymentmethodCombo;
    private javax.swing.JTextField subtotalText;
    private javax.swing.JTextField taxText;
    private javax.swing.JTextField totalText;
    // End of variables declaration//GEN-END:variables
}
