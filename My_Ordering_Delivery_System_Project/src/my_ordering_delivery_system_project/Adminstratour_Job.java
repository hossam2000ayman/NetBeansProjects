/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my_ordering_delivery_system_project;

import java.awt.*;
import java.awt.event.*;
import java.sql.*;
import java.text.*;
import javax.swing.*;
import javax.swing.table.*;
import java.awt.event.KeyEvent;

/**
 *
 * @author hp
 */
public class Adminstratour_Job extends javax.swing.JFrame {

    private final String url = "jdbc:sqlserver://localhost\\ABDO_HARB_HOSSAM;"
            + "databaseName=My_Ordering_Delivery_System_Project;"
            + "user=sa;"
            + "password=sql2020$$;";

    /**
     * Creates new form Adminstratour_Job
     */
    public Adminstratour_Job() {
        initComponents();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(this, "Cannot LoadJDBC Driver !!!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jbtnRemove = new javax.swing.JButton();
        jbtnExit = new javax.swing.JButton();
        jbtnPrint = new javax.swing.JButton();
        jbtnReset = new javax.swing.JButton();
        jbtnALL = new javax.swing.JButton();
        jbtnRefresh = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableCheck_In = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableCheck_Out = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        FnameText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        LnameText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        EmailAddressText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        phoneText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        SSNText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        salaryText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jobCombo = new javax.swing.JComboBox();
        EndDateText = new javax.swing.JTextField();
        StartDateText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        AddressText = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        PasswordText = new javax.swing.JPasswordField();
        jPanel3 = new javax.swing.JPanel();
        jbtnSystemUser = new javax.swing.JButton();
        jbtnCustomer = new javax.swing.JButton();
        jbtnCheif = new javax.swing.JButton();
        jbtnDeliveryMan = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jbtnRemove.setBackground(new java.awt.Color(255, 255, 255));
        jbtnRemove.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbtnRemove.setText("REMOVE");
        jbtnRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtnRemoveMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbtnRemoveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jbtnRemoveMouseExited(evt);
            }
        });
        jbtnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRemoveActionPerformed(evt);
            }
        });

        jbtnExit.setBackground(new java.awt.Color(255, 255, 255));
        jbtnExit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbtnExit.setText("EXIT");
        jbtnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtnExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbtnExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jbtnExitMouseExited(evt);
            }
        });
        jbtnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnExitActionPerformed(evt);
            }
        });

        jbtnPrint.setBackground(new java.awt.Color(255, 255, 255));
        jbtnPrint.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbtnPrint.setText("PRINT");
        jbtnPrint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtnPrintMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbtnPrintMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jbtnPrintMouseExited(evt);
            }
        });
        jbtnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPrintActionPerformed(evt);
            }
        });

        jbtnReset.setBackground(new java.awt.Color(255, 255, 255));
        jbtnReset.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbtnReset.setText("RESET");
        jbtnReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtnResetMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbtnResetMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jbtnResetMouseExited(evt);
            }
        });
        jbtnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnResetActionPerformed(evt);
            }
        });

        jbtnALL.setBackground(new java.awt.Color(255, 255, 255));
        jbtnALL.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbtnALL.setText("ALL");
        jbtnALL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtnALLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbtnALLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jbtnALLMouseExited(evt);
            }
        });
        jbtnALL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnALLActionPerformed(evt);
            }
        });

        jbtnRefresh.setBackground(new java.awt.Color(255, 255, 255));
        jbtnRefresh.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbtnRefresh.setText("Refresh");
        jbtnRefresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtnRefreshMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbtnRefreshMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jbtnRefreshMouseExited(evt);
            }
        });
        jbtnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtnALL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jbtnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnPrint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnRemove, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                        .addComponent(jbtnRefresh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtnALL, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jbtnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jTabbedPane1.setBackground(new java.awt.Color(0, 204, 204));

        jTable.setBackground(new java.awt.Color(0, 204, 204));
        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fname", "Lname", "Email Address", "Phone", "SSN", "Job", "Salary", "Start Date", "End Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable);

        jTabbedPane1.addTab("ALL", jScrollPane1);

        jTableCheck_In.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "National ID", "Job"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTableCheck_In);

        jTabbedPane1.addTab("Check-In", jScrollPane3);

        jTableCheck_Out.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "National ID", "Job"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTableCheck_Out);

        jTabbedPane1.addTab("Check-Out", jScrollPane4);

        jPanel4.setBackground(new java.awt.Color(0, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        FnameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FnameTextActionPerformed(evt);
            }
        });
        FnameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FnameTextKeyTyped(evt);
            }
        });

        jLabel2.setText("Fname :");
        jLabel2.setToolTipText("");

        LnameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                LnameTextKeyTyped(evt);
            }
        });

        jLabel3.setText("Lname :");

        EmailAddressText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailAddressTextActionPerformed(evt);
            }
        });
        EmailAddressText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                EmailAddressTextKeyTyped(evt);
            }
        });

        jLabel4.setText("Email Address :");

        phoneText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                phoneTextKeyTyped(evt);
            }
        });

        jLabel5.setText("Phone :");

        SSNText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SSNTextActionPerformed(evt);
            }
        });
        SSNText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SSNTextKeyTyped(evt);
            }
        });

        jLabel6.setText("SSN :");

        jLabel7.setText("Job :");

        salaryText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                salaryTextKeyTyped(evt);
            }
        });

        jLabel8.setText("Salary :");

        jLabel9.setText("Start Date :");

        jLabel10.setText("End Date :");

        jobCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Customer", "System User", "Cheif", "Delivery Man" }));
        jobCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jobComboActionPerformed(evt);
            }
        });

        EndDateText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndDateTextActionPerformed(evt);
            }
        });
        EndDateText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                EndDateTextKeyTyped(evt);
            }
        });

        StartDateText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartDateTextActionPerformed(evt);
            }
        });
        StartDateText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                StartDateTextKeyTyped(evt);
            }
        });

        jLabel11.setText("Address");

        AddressText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddressTextActionPerformed(evt);
            }
        });
        AddressText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                AddressTextKeyTyped(evt);
            }
        });

        jLabel13.setText("Password :");

        PasswordText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordTextActionPerformed(evt);
            }
        });
        PasswordText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PasswordTextKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SSNText)
                    .addComponent(FnameText, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                    .addComponent(LnameText)
                    .addComponent(EmailAddressText)
                    .addComponent(phoneText)
                    .addComponent(AddressText, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE))
                .addGap(118, 118, 118)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PasswordText))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(salaryText)
                            .addComponent(jobCombo, 0, 146, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EndDateText)
                            .addComponent(StartDateText))))
                .addGap(56, 56, 56))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FnameText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LnameText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EmailAddressText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddressText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phoneText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SSNText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jobCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(salaryText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StartDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EndDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 204, 204));

        jbtnSystemUser.setBackground(new java.awt.Color(255, 255, 255));
        jbtnSystemUser.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbtnSystemUser.setText("System User");
        jbtnSystemUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtnSystemUserMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbtnSystemUserMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jbtnSystemUserMouseExited(evt);
            }
        });
        jbtnSystemUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSystemUserActionPerformed(evt);
            }
        });

        jbtnCustomer.setBackground(new java.awt.Color(255, 255, 255));
        jbtnCustomer.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbtnCustomer.setText("Customer");
        jbtnCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtnCustomerMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbtnCustomerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jbtnCustomerMouseExited(evt);
            }
        });
        jbtnCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCustomerActionPerformed(evt);
            }
        });
        jbtnCustomer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jbtnCustomerKeyTyped(evt);
            }
        });

        jbtnCheif.setBackground(new java.awt.Color(255, 255, 255));
        jbtnCheif.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbtnCheif.setText("Cheif");
        jbtnCheif.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtnCheifMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbtnCheifMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jbtnCheifMouseExited(evt);
            }
        });
        jbtnCheif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCheifActionPerformed(evt);
            }
        });

        jbtnDeliveryMan.setBackground(new java.awt.Color(255, 255, 255));
        jbtnDeliveryMan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbtnDeliveryMan.setText("Delivery Man");
        jbtnDeliveryMan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtnDeliveryManMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbtnDeliveryManMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jbtnDeliveryManMouseExited(evt);
            }
        });
        jbtnDeliveryMan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeliveryManActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jbtnCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtnSystemUser, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jbtnCheif, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jbtnDeliveryMan, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbtnCheif, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtnDeliveryMan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtnCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtnSystemUser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnExitActionPerformed
        // TODO add your handling code here:
        My_Adminstratour MA = new My_Adminstratour();
        MA.show();
        dispose();
    }//GEN-LAST:event_jbtnExitActionPerformed

    private void jbtnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPrintActionPerformed
        // TODO add your handling code here:
        //new thing

        if (!SSNText.getText().equals("")) {
            MessageFormat header = new MessageFormat("Please Wait ...");
            MessageFormat footer = new MessageFormat("Page {0, number, integer}");
            try {
                //make printer to print table (fatorah)
                jTable.print(JTable.PrintMode.NORMAL, header, footer);
                jTableCheck_In.print(JTable.PrintMode.NORMAL, header, footer);
                jTableCheck_Out.print(JTable.PrintMode.NORMAL, header, footer);

            } catch (Exception e) {
                System.err.format("No Printer Found", e.getMessage());
            }
        }
    }//GEN-LAST:event_jbtnPrintActionPerformed

    private void jbtnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnResetActionPerformed
        // TODO add your handling code here:
        try {

            FnameText.setText("");
            LnameText.setText("");
            phoneText.setText("");
            EmailAddressText.setText("");
            AddressText.setText("");
            PasswordText.setText("");
            SSNText.setText("");
            salaryText.setText("");
            StartDateText.setText("");
            EndDateText.setText("");

        } catch (Exception e) {

        }
    }//GEN-LAST:event_jbtnResetActionPerformed

    public static void AddRowToJTable(Object[] dataRow) {
        DefaultTableModel modell = (DefaultTableModel) jTable.getModel();
        // modell.addRow(new Object[]{IDText.getText(),FnameText.getText(),LnameText.getText(),EmailAddressText.getText(),phoneText.getText(),SSNText.getText(),jobCombo.getSelectedItem(),salaryText.getText(),StartDateText.getCalendar(),EndDateText.getCalendar()});    
        modell.addRow(dataRow);
    }

    public static void AddRowToJTable2(Object[] dataRow) {
        DefaultTableModel modell = (DefaultTableModel) jTableCheck_In.getModel();
        // modell.addRow(new Object[]{IDText.getText(),FnameText.getText(),LnameText.getText(),EmailAddressText.getText(),phoneText.getText(),SSNText.getText(),jobCombo.getSelectedItem(),salaryText.getText(),StartDateText.getCalendar(),EndDateText.getCalendar()});    
        modell.addRow(dataRow);
    }

    public static void AddRowToJTable3(Object[] dataRow) {
        DefaultTableModel modell = (DefaultTableModel) jTableCheck_Out.getModel();
        // modell.addRow(new Object[]{IDText.getText(),FnameText.getText(),LnameText.getText(),EmailAddressText.getText(),phoneText.getText(),SSNText.getText(),jobCombo.getSelectedItem(),salaryText.getText(),StartDateText.getCalendar(),EndDateText.getCalendar()});    
        modell.addRow(dataRow);
    }


    private void jbtnResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnResetMouseClicked
        // TODO add your handling code here:
        jbtnReset.setBackground(Color.black);
        jbtnReset.setForeground(Color.white);

    }//GEN-LAST:event_jbtnResetMouseClicked

    private void jbtnResetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnResetMouseEntered
        // TODO add your handling code here:
        jbtnReset.setBackground(Color.darkGray);
        jbtnReset.setForeground(Color.white);

    }//GEN-LAST:event_jbtnResetMouseEntered

    private void jbtnResetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnResetMouseExited
        // TODO add your handling code here:
        jbtnReset.setBackground(Color.white);
        jbtnReset.setForeground(Color.black);
    }//GEN-LAST:event_jbtnResetMouseExited

    private void jbtnPrintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnPrintMouseClicked
        // TODO add your handling code here:
        jbtnPrint.setBackground(Color.black);
        jbtnPrint.setForeground(Color.white);
    }//GEN-LAST:event_jbtnPrintMouseClicked

    private void jbtnPrintMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnPrintMouseEntered
        // TODO add your handling code here:
        jbtnPrint.setBackground(Color.darkGray);
        jbtnPrint.setForeground(Color.WHITE);
    }//GEN-LAST:event_jbtnPrintMouseEntered

    private void jbtnPrintMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnPrintMouseExited
        // TODO add your handling code here:
        jbtnPrint.setBackground(Color.WHITE);
        jbtnPrint.setForeground(Color.black);
    }//GEN-LAST:event_jbtnPrintMouseExited

    private void jbtnExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnExitMouseClicked
        // TODO add your handling code here:
        jbtnExit.setBackground(Color.black);
        jbtnExit.setForeground(Color.white);
    }//GEN-LAST:event_jbtnExitMouseClicked

    private void jbtnExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnExitMouseEntered
        // TODO add your handling code here:
        jbtnExit.setBackground(Color.darkGray);
        jbtnExit.setForeground(Color.white);

    }//GEN-LAST:event_jbtnExitMouseEntered

    private void jbtnExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnExitMouseExited
        // TODO add your handling code here:
        jbtnExit.setBackground(Color.white);
        jbtnExit.setForeground(Color.black);
    }//GEN-LAST:event_jbtnExitMouseExited

    private void jbtnCustomerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnCustomerKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jbtnCustomerKeyTyped

    private void jbtnCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnCustomerMouseClicked
        // TODO add your handling code here:

        jbtnCustomer.setBackground(Color.black);
        jbtnCustomer.setForeground(Color.white);
    }//GEN-LAST:event_jbtnCustomerMouseClicked

    private void jbtnCustomerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnCustomerMouseEntered
        // TODO add your handling code here:

        jbtnCustomer.setBackground(Color.darkGray);
        jbtnCustomer.setForeground(Color.white);
    }//GEN-LAST:event_jbtnCustomerMouseEntered

    private void jbtnCustomerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnCustomerMouseExited
        // TODO add your handling code here:

        jbtnCustomer.setBackground(Color.white);
        jbtnCustomer.setForeground(Color.black);
    }//GEN-LAST:event_jbtnCustomerMouseExited

    private void jbtnSystemUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnSystemUserMouseClicked
        // TODO add your handling code here:

        jbtnSystemUser.setBackground(Color.black);
        jbtnSystemUser.setForeground(Color.white);
    }//GEN-LAST:event_jbtnSystemUserMouseClicked

    private void jbtnSystemUserMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnSystemUserMouseEntered
        // TODO add your handling code here:

        jbtnSystemUser.setBackground(Color.darkGray);
        jbtnSystemUser.setForeground(Color.white);
    }//GEN-LAST:event_jbtnSystemUserMouseEntered

    private void jbtnSystemUserMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnSystemUserMouseExited
        // TODO add your handling code here:

        jbtnSystemUser.setBackground(Color.white);
        jbtnSystemUser.setForeground(Color.black);
    }//GEN-LAST:event_jbtnSystemUserMouseExited

    private void jbtnCheifMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnCheifMouseClicked
        // TODO add your handling code here:
        jbtnCheif.setBackground(Color.black);
        jbtnCheif.setForeground(Color.white);
    }//GEN-LAST:event_jbtnCheifMouseClicked

    private void jbtnCheifMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnCheifMouseEntered
        // TODO add your handling code here:

        jbtnCheif.setBackground(Color.darkGray);
        jbtnCheif.setForeground(Color.white);
    }//GEN-LAST:event_jbtnCheifMouseEntered

    private void jbtnCheifMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnCheifMouseExited
        // TODO add your handling code here:

        jbtnCheif.setBackground(Color.white);
        jbtnCheif.setForeground(Color.black);
    }//GEN-LAST:event_jbtnCheifMouseExited

    private void jbtnDeliveryManMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnDeliveryManMouseClicked
        // TODO add your handling code here:
        jbtnDeliveryMan.setBackground(Color.black);
        jbtnDeliveryMan.setForeground(Color.white);
    }//GEN-LAST:event_jbtnDeliveryManMouseClicked

    private void jbtnDeliveryManMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnDeliveryManMouseEntered
        // TODO add your handling code here:
        jbtnDeliveryMan.setBackground(Color.darkGray);
        jbtnDeliveryMan.setForeground(Color.white);
    }//GEN-LAST:event_jbtnDeliveryManMouseEntered

    private void jbtnDeliveryManMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnDeliveryManMouseExited
        // TODO add your handling code here:
        jbtnDeliveryMan.setBackground(Color.white);
        jbtnDeliveryMan.setForeground(Color.black);
    }//GEN-LAST:event_jbtnDeliveryManMouseExited

    private void jbtnCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCustomerActionPerformed
        // TODO add your handling code here:

        My_Login_Registeration MLR = new My_Login_Registeration();
        MLR.show();

    }//GEN-LAST:event_jbtnCustomerActionPerformed

    private void jbtnSystemUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSystemUserActionPerformed
        // TODO add your handling code here:
        My_System_User MSU = new My_System_User();
        MSU.show();

    }//GEN-LAST:event_jbtnSystemUserActionPerformed

    private void jbtnCheifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCheifActionPerformed
        // TODO add your handling code here:
        My_Cheif MC = new My_Cheif();
        MC.show();

    }//GEN-LAST:event_jbtnCheifActionPerformed

    private void jbtnDeliveryManActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeliveryManActionPerformed
        // TODO add your handling code here:
        My_Delivery_Man MDM = new My_Delivery_Man();
        MDM.show();

    }//GEN-LAST:event_jbtnDeliveryManActionPerformed

    private void jbtnALLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnALLMouseClicked
        // TODO add your handling code here:
        jbtnALL.setBackground(Color.black);
        jbtnALL.setForeground(Color.white);
    }//GEN-LAST:event_jbtnALLMouseClicked

    private void jbtnALLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnALLMouseEntered
        // TODO add your handling code here:
        jbtnALL.setBackground(Color.darkGray);
        jbtnALL.setForeground(Color.white);
    }//GEN-LAST:event_jbtnALLMouseEntered

    private void jbtnALLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnALLMouseExited
        // TODO add your handling code here:
        jbtnALL.setBackground(Color.white);
        jbtnALL.setForeground(Color.black);
    }//GEN-LAST:event_jbtnALLMouseExited

    private void jbtnALLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnALLActionPerformed
        // TODO add your handling code here:
        String fname = FnameText.getText();
        String lname = LnameText.getText();
        String Email = EmailAddressText.getText();
        String phone = phoneText.getText();
        String Address = AddressText.getText();
        String SSN = SSNText.getText();
        ////////////////////////////////////////////////////////////////////////////////
        Object job = jobCombo.getSelectedItem().toString();

        if (jobCombo.getSelectedItem() == "Customer") {
            String jobb2 = (String) job.toString();
            String jb = "Customer";
            jobb2 = jb;
            job = jobb2;
        } else if (jobCombo.getSelectedItem() == "System User") {
            String jobb2 = (String) job.toString();
            String jb = "System User";
            jobb2 = jb;
            job = jobb2;
        } else if (jobCombo.getSelectedItem() == "Chief") {
            String jobb2 = (String) job.toString();
            String jb = "Chief";
            jobb2 = jb;
            job = jobb2;
        } else if (jobCombo.getSelectedItem() == "Delivery Man") {
            String jobb2 = (String) job.toString();
            String jb = "Delivery Man";
            jobb2 = jb;
            job = jobb2;
        }
        ////////////////////////////////////////////////////////////////////////////////

        String salary = salaryText.getText();
        String Password = PasswordText.getText();
        String StartDate = StartDateText.getText();
        String EndDate = EndDateText.getText();

        Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        try {
            //Reg
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO ADMINSTRATOUR VALUES"
                    + "('" + fname + "','" + lname + "','" + Email + "','" + phone + "','" + SSN + "','" + job + "','" + salary + "','" + StartDate + "','" + EndDate + "');";

            int affectRows = stmt.executeUpdate(query);//0
//insert
            if (affectRows == 1) {//1
                JOptionPane.showMessageDialog(this, "Data Inserted Successfully");
            } else {//0
                JOptionPane.showMessageDialog(this, "Error");//not reachable
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {

                }

            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {

                }

            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {

                }

            }
        }

        Connection con2 = null;
        Statement stmt2 = null;
        ResultSet result2 = null;
        try {
            //Reg
            con2 = DriverManager.getConnection(url);
            stmt2 = con2.createStatement();
            String query2 = "INSERT INTO Reg VALUES"
                    + "('" + fname + "','" + lname + "','" + Email + "','" + phone + "','" + Address + "','" + SSN + "','" + Password + "','" + job + "');";

            int affectRows2 = stmt2.executeUpdate(query2);//0
//insert
            if (affectRows2 == 1) {//1

            } else {//0
                JOptionPane.showMessageDialog(this, "Error");//not reachable
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con2 != null) {
                try {
                    con2.close();
                } catch (Exception e) {

                }

            }
            if (stmt2 != null) {
                try {
                    stmt2.close();
                } catch (Exception e) {

                }

            }
            if (result2 != null) {
                try {
                    result2.close();
                } catch (Exception e) {

                }

            }
        }

        ///////////////////////////////////////////////////////////////////////////////////////// 
        try {
            DefaultTableModel model = (DefaultTableModel) jTable.getModel();

            if (!FnameText.getText().equals("") && !LnameText.getText().equals("") && !EmailAddressText.getText().equals("") && !phoneText.getText().equals("") && !SSNText.getText().equals("") && !salaryText.getText().equals("") && !StartDateText.getText().equals("") && !EndDateText.getText().equals("")) {
                model.addRow(new Object[]{FnameText.getText(), LnameText.getText(), EmailAddressText.getText(), phoneText.getText(), SSNText.getText(), jobCombo.getSelectedItem(), salaryText.getText(), StartDateText.getText(), EndDateText.getText()});
            } else {
                JOptionPane.showMessageDialog(this, "Please Complete The Form");

                if (!FnameText.getText().equals("")) {
                    FnameText.setBackground(Color.green);
                }
                if (!LnameText.getText().equals("")) {
                    LnameText.setBackground(Color.green);
                }
                if (!EmailAddressText.getText().equals("")) {
                    EmailAddressText.setBackground(Color.green);
                }
                if (!phoneText.getText().equals("")) {
                    phoneText.setBackground(Color.green);
                }
                if (!SSNText.getText().equals("")) {
                    SSNText.setBackground(Color.green);
                }
                if (!salaryText.getText().equals("")) {
                    salaryText.setBackground(Color.green);
                }
                if (!StartDateText.getText().equals("")) {
                    StartDateText.setBackground(Color.green);
                }
                if (!EndDateText.getText().equals("")) {
                    EndDateText.setBackground(Color.green);
                }
            }
        } catch (Exception e) {
            //handle exception
        }


    }//GEN-LAST:event_jbtnALLActionPerformed

    private void jbtnRefreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnRefreshMouseClicked
        // TODO add your handling code here:
        jbtnRefresh.setBackground(Color.black);
        jbtnRefresh.setForeground(Color.white);
    }//GEN-LAST:event_jbtnRefreshMouseClicked

    private void jbtnRefreshMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnRefreshMouseEntered
        // TODO add your handling code here:
        jbtnRefresh.setBackground(Color.darkGray);
        jbtnRefresh.setForeground(Color.white);
    }//GEN-LAST:event_jbtnRefreshMouseEntered

    private void jbtnRefreshMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnRefreshMouseExited
        // TODO add your handling code here:
        jbtnRefresh.setBackground(Color.white);
        jbtnRefresh.setForeground(Color.black);
    }//GEN-LAST:event_jbtnRefreshMouseExited

    private void jbtnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRefreshActionPerformed
        // TODO add your handling code here:
        //jTableCheck_In
        Connection con = null;
        Statement stmt = null;
        ResultSet result = null;

        //jTable_ALL
        Connection con2 = null;
        Statement stmt2 = null;
        ResultSet result2 = null;

        //jTable_CheckOut
        Connection con3 = null;
        Statement stmt3 = null;
        ResultSet result3 = null;

        try {
            //jTableCheck_In
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "SELECT * FROM Check_In_ADMINS ;";
            result = stmt.executeQuery(query);

            String ssn = null;
            String job = null;
            //in case of success login
            //jTableCheck_In

            if (result.next()) {

                ssn = result.getString("National_ID");
                job = result.getString("Job");

                String table_check_in[] = {ssn, job};
                DefaultTableModel model = (DefaultTableModel) jTableCheck_In.getModel();

                model.addRow(table_check_in);

                JOptionPane.showMessageDialog(this, "All Info are Represented in  Check In");
            } else {
                JOptionPane.showMessageDialog(this, "No One MAKE Check In");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

        ///////////////////////////////////////////////////////////////////////////////////////////////////
        try {
            //jTable_ALL
            con2 = DriverManager.getConnection(url);
            stmt2 = con.createStatement();
            String query2 = "SELECT * FROM ADMINSTRATOUR;";
            result2 = stmt2.executeQuery(query2);
            String fname2 = null;
            String lname2 = null;
            String email2 = null;
            String phone2 = null;
            String ssn2 = null;
            String job2 = null;
            String salary2 = null;
            String StartDate2 = null;
            String EndDate2 = null;

            //jTable_ALL
            if (result2.next()) {
                fname2 = result2.getString("Fname");
                lname2 = result2.getString("Lname");
                email2 = result2.getString("EmailAddress");
                phone2 = result2.getString("Phone");
                ssn2 = result2.getString("SSN");
                job2 = result2.getString("Job");
                salary2 = result2.getString("Salary");
                StartDate2 = result2.getString("StartDate");
                EndDate2 = result2.getString("EndDate");

                String table_ALL[] = {fname2, lname2, email2, phone2, ssn2, job2, salary2, StartDate2, EndDate2};
                DefaultTableModel model = (DefaultTableModel) jTable.getModel();
                model.addRow(table_ALL);

                JOptionPane.showMessageDialog(this, "All Info are Represented");
            } else {
                JOptionPane.showMessageDialog(this, "No One Employeed");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

        /////////////////////////////////////////////////////////////////////////////////
        try {
            //jtable check out
            con3 = DriverManager.getConnection(url);
            stmt3 = con3.createStatement();
            String query3 = "SELECT * FROM Check_Out_ADMINS ;";
            result3 = stmt3.executeQuery(query3);

            String ssn3 = null;
            String job3 = null;
            //in case of success login
            //jtable check out

            if (result3.next()) {

                ssn3 = result.getString("National_ID");
                job3 = result.getString("Job");

                String table_check_out[] = {ssn3, job3};
                DefaultTableModel model = (DefaultTableModel) jTableCheck_Out.getModel();

                model.addRow(table_check_out);

                JOptionPane.showMessageDialog(this, "All Info are Represented in Check Out");
            } else {
                JOptionPane.showMessageDialog(this, "No One Make Check Out");
            }

        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            //mean by if it connect to the jdbc server then close it for other query (important)
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                }
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                }
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                }
            }

            if (con2 != null) {
                try {
                    con2.close();
                } catch (Exception e) {
                }
            }
            if (stmt2 != null) {
                try {
                    stmt2.close();
                } catch (Exception e) {
                }
            }
            if (result2 != null) {
                try {
                    result2.close();
                } catch (Exception e) {
                }
            }

            if (con3 != null) {
                try {
                    con3.close();
                } catch (Exception e) {
                }
            }
            if (stmt3 != null) {
                try {
                    stmt3.close();
                } catch (Exception e) {
                }
            }
            if (result3 != null) {
                try {
                    result3.close();
                } catch (Exception e) {
                }
            }

        }

        //jTableCheck_In
        //jTableCheck_Out
        //jTable_ALL

    }//GEN-LAST:event_jbtnRefreshActionPerformed

    private void jobComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jobComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jobComboActionPerformed

    private void salaryTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_salaryTextKeyTyped
        // TODO add your handling code here:
        String Salary = salaryText.getText();

        int length = Salary.length();

        char c = evt.getKeyChar();

        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            if (length < 5) {
                salaryText.setEditable(true);
            } else {
                salaryText.setEditable(false);
            }
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                salaryText.setEditable(true);
            } else {
                salaryText.setEditable(false);
            }
        }
    }//GEN-LAST:event_salaryTextKeyTyped

    private void SSNTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SSNTextKeyTyped
        // TODO add your handling code here:
        String SSN = SSNText.getText();

        int length = SSN.length();

        char c = evt.getKeyChar();

        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            if (length < 15) {
                SSNText.setEditable(true);
            } else {
                evt.consume();
            }
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                SSNText.setEditable(true);
            } else {
                evt.consume();
            }
        }
    }//GEN-LAST:event_SSNTextKeyTyped

    private void SSNTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SSNTextActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_SSNTextActionPerformed

    private void phoneTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneTextKeyTyped
        // TODO add your handling code here:
        String Phone = phoneText.getText();

        int length = Phone.length();

        char c = evt.getKeyChar();

        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            if (length < 12) {
                phoneText.setEditable(true);
            } else {
                evt.consume();
            }
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                phoneText.setEditable(true);
            } else {
                evt.consume();
            }
        }
    }//GEN-LAST:event_phoneTextKeyTyped

    private void EmailAddressTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EmailAddressTextKeyTyped
        // TODO add your handling code here:
        String EmailAddress = EmailAddressText.getText();

        int length = EmailAddress.length();

        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            if (length < 31) {
                EmailAddressText.setEditable(true);
            } else {
                evt.consume();
            }
        }
    }//GEN-LAST:event_EmailAddressTextKeyTyped

    private void EmailAddressTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailAddressTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailAddressTextActionPerformed

    private void LnameTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LnameTextKeyTyped
        // TODO add your handling code here:
        String Lname = LnameText.getText();

        int length = Lname.length();

        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            if (length < 9) {
                LnameText.setEditable(true);
            } else {
                evt.consume();
            }
        }
    }//GEN-LAST:event_LnameTextKeyTyped

    private void FnameTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FnameTextKeyTyped
        // TODO add your handling code here:
        String Fname = FnameText.getText();

        int length = Fname.length();

        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            if (length < 9) {
                FnameText.setEditable(true);
            } else {
                evt.consume();
            }
        }
    }//GEN-LAST:event_FnameTextKeyTyped

    private void FnameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FnameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FnameTextActionPerformed

    private void EndDateTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EndDateTextKeyTyped
        // TODO add your handling code here:

        String EndDate = EndDateText.getText();

        int length = EndDate.length();

        char c = evt.getKeyChar();

        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            if (length < 9) {
                EndDateText.setEditable(true);
            } else {
                evt.consume();
            }
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SLASH) {
                EndDateText.setEditable(true);
            } else {
                evt.consume();
            }
        }
    }//GEN-LAST:event_EndDateTextKeyTyped

    private void StartDateTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_StartDateTextKeyTyped
        // TODO add your handling code here:
        String StartDate = StartDateText.getText();

        int length = StartDate.length();

        char c = evt.getKeyChar();

        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            if (length < 9) {
                StartDateText.setEditable(true);
            } else {
                evt.consume();
            }
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SLASH) {
                StartDateText.setEditable(true);
            } else {
                evt.consume();
            }
        }
    }//GEN-LAST:event_StartDateTextKeyTyped

    private void AddressTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AddressTextKeyTyped
        // TODO add your handling code here:
        String Address = AddressText.getText();

        int length = Address.length();

        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            if (length < 29) {
                AddressText.setEditable(true);
            } else {
                evt.consume();
            }
        }
    }//GEN-LAST:event_AddressTextKeyTyped

    private void PasswordTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PasswordTextKeyTyped
        // TODO add your handling code here:
        String Pass = PasswordText.getText();

        int length = Pass.length();

        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            if (length < 10) {
                PasswordText.setEditable(true);
            } else {
                evt.consume();
            }
        }
    }//GEN-LAST:event_PasswordTextKeyTyped

    private void PasswordTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordTextActionPerformed

    private void EndDateTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndDateTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EndDateTextActionPerformed

    private void StartDateTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartDateTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StartDateTextActionPerformed

    private void AddressTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddressTextActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_AddressTextActionPerformed

    private void jbtnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRemoveActionPerformed
        // TODO add your handling code here:
        Connection con = null;
        Statement stmt = null;
        try {

            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "DELETE FROM ADMINSTRATOUR"           //row          //col
            + " WHERE Fname='"+jTable.getValueAt(jTable.getRowCount()-1, 0)+"';";
            int affectedRows = stmt.executeUpdate(query);
            if (affectedRows >= 1) {
                JOptionPane.showMessageDialog(this, affectedRows + " Data Successful Deletation !!! ");
                
            } else {
                JOptionPane.showMessageDialog(this, "There is No Data in Table");
                
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (Exception ex) {
                }
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception ex) {
                }
            }
        }

        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        int RemoveItem = jTable.getSelectedRow();
        try {
            if (RemoveItem >= 0) { //if there is an item remove it
                model.removeRow(RemoveItem);

                FnameText.setText("");
                LnameText.setText("");
                EmailAddressText.setText("");
                phoneText.setText("");
                SSNText.setText("");
                salaryText.setText("");
                StartDateText.setText("");
                EndDateText.setText("");

            }else{
                JOptionPane.showMessageDialog(this, "Cannot Remove Unselected Row ");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Cannot Remove Unselected Row ");
        }
    }//GEN-LAST:event_jbtnRemoveActionPerformed

    private void jbtnRemoveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnRemoveMouseExited
        // TODO add your handling code here:
        jbtnRemove.setBackground(Color.white);
        jbtnRemove.setForeground(Color.black);
    }//GEN-LAST:event_jbtnRemoveMouseExited

    private void jbtnRemoveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnRemoveMouseEntered
        // TODO add your handling code here:
        jbtnRemove.setBackground(Color.darkGray);
        jbtnRemove.setForeground(Color.white);
    }//GEN-LAST:event_jbtnRemoveMouseEntered

    private void jbtnRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnRemoveMouseClicked
        // TODO add your handling code here:
        jbtnRemove.setBackground(Color.black);
        jbtnRemove.setForeground(Color.white);
    }//GEN-LAST:event_jbtnRemoveMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Adminstratour_Job.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Adminstratour_Job.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Adminstratour_Job.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Adminstratour_Job.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Adminstratour_Job().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTextField AddressText;
    private static javax.swing.JTextField EmailAddressText;
    private static javax.swing.JTextField EndDateText;
    private static javax.swing.JTextField FnameText;
    private static javax.swing.JTextField LnameText;
    private javax.swing.JPasswordField PasswordText;
    private static javax.swing.JTextField SSNText;
    private static javax.swing.JTextField StartDateText;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private static javax.swing.JTable jTable;
    private static javax.swing.JTable jTableCheck_In;
    private static javax.swing.JTable jTableCheck_Out;
    private static javax.swing.JButton jbtnALL;
    private javax.swing.JButton jbtnCheif;
    private javax.swing.JButton jbtnCustomer;
    private javax.swing.JButton jbtnDeliveryMan;
    private javax.swing.JButton jbtnExit;
    private javax.swing.JButton jbtnPrint;
    private static javax.swing.JButton jbtnRefresh;
    private javax.swing.JButton jbtnRemove;
    private javax.swing.JButton jbtnReset;
    private javax.swing.JButton jbtnSystemUser;
    private static javax.swing.JComboBox jobCombo;
    private static javax.swing.JTextField phoneText;
    private static javax.swing.JTextField salaryText;
    // End of variables declaration//GEN-END:variables
}
