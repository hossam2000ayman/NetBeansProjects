/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my_ordering_delivery_system_project;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.*;
import javax.swing.JFrame;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class My_Adminstratour extends javax.swing.JFrame {
    
     private final String url = "jdbc:sqlserver://localhost\\ABDO_HARB_HOSSAM;"
            + "databaseName=My_Ordering_Delivery_System_Project;"
            + "user=sa;"
            + "password=sql2020$$;";

    /**
     * Creates new form My_Adminstratour
     */
    public My_Adminstratour() {
        initComponents();
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(this, "Cannot LoadJDBC Driver !!!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane5 = new javax.swing.JTabbedPane();
        jTabbedPane6 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        NationalID_Check_In = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jbtnCheck_In = new javax.swing.JButton();
        Passwordtext_Check_IN = new javax.swing.JPasswordField();
        jTabbedPane7 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        NationalIDtext_Check_Out = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jbtn_CheckOut = new javax.swing.JButton();
        Passwordtext_Check_Out = new javax.swing.JPasswordField();
        jTabbedPane8 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        firstnametext = new javax.swing.JTextField();
        lastnametext = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        emailaddresstext = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        phonenumbertext = new javax.swing.JTextField();
        Addresstext = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jbtnRegister = new javax.swing.JButton();
        jbtnReset = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nationalidtext = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        passwordtext = new javax.swing.JPasswordField();
        confirmpasswordtext = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane5.setBackground(new java.awt.Color(204, 204, 255));

        jPanel4.setBackground(new java.awt.Color(0, 204, 204));

        jLabel14.setText("National ID :");

        NationalID_Check_In.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NationalID_Check_InKeyTyped(evt);
            }
        });

        jLabel15.setText("Password :");

        jbtnCheck_In.setText("Sign-In");
        jbtnCheck_In.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCheck_InActionPerformed(evt);
            }
        });

        Passwordtext_Check_IN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Passwordtext_Check_INKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Passwordtext_Check_IN, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NationalID_Check_In, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jbtnCheck_In, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(142, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NationalID_Check_In, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Passwordtext_Check_IN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jbtnCheck_In)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        jTabbedPane6.addTab("Login", jPanel4);

        jTabbedPane5.addTab("Sign-In", jTabbedPane6);

        jTabbedPane7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane7.setName(""); // NOI18N

        jPanel5.setBackground(new java.awt.Color(0, 204, 204));

        jLabel16.setText("National ID :");

        NationalIDtext_Check_Out.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NationalIDtext_Check_OutKeyTyped(evt);
            }
        });

        jLabel17.setText("Password :");

        jbtn_CheckOut.setText("Sign-Out");
        jbtn_CheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_CheckOutActionPerformed(evt);
            }
        });

        Passwordtext_Check_Out.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Passwordtext_Check_OutKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(NationalIDtext_Check_Out, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jbtn_CheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(Passwordtext_Check_Out, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NationalIDtext_Check_Out, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Passwordtext_Check_Out, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jbtn_CheckOut)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        jTabbedPane7.addTab("Log-Out", jPanel5);

        jTabbedPane5.addTab("Sign-Out", jTabbedPane7);

        jTabbedPane8.setBackground(new java.awt.Color(255, 255, 255));

        jPanel6.setBackground(new java.awt.Color(0, 204, 204));

        jLabel1.setText("First Name :");

        firstnametext.setBackground(new java.awt.Color(153, 255, 255));
        firstnametext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                firstnametextKeyTyped(evt);
            }
        });

        lastnametext.setBackground(new java.awt.Color(153, 255, 255));
        lastnametext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastnametextActionPerformed(evt);
            }
        });
        lastnametext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lastnametextKeyTyped(evt);
            }
        });

        jLabel2.setText("Last Name :");

        emailaddresstext.setBackground(new java.awt.Color(153, 255, 255));
        emailaddresstext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailaddresstextActionPerformed(evt);
            }
        });
        emailaddresstext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                emailaddresstextKeyTyped(evt);
            }
        });

        jLabel4.setText("Email Address :");

        jLabel3.setText("Phone number :");

        phonenumbertext.setBackground(new java.awt.Color(153, 255, 255));
        phonenumbertext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phonenumbertextActionPerformed(evt);
            }
        });
        phonenumbertext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                phonenumbertextKeyTyped(evt);
            }
        });

        Addresstext.setBackground(new java.awt.Color(153, 255, 255));
        Addresstext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddresstextActionPerformed(evt);
            }
        });
        Addresstext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                AddresstextKeyTyped(evt);
            }
        });

        jLabel6.setText("Address :");

        jbtnRegister.setBackground(new java.awt.Color(153, 255, 255));
        jbtnRegister.setText("Register");
        jbtnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRegisterActionPerformed(evt);
            }
        });

        jbtnReset.setBackground(new java.awt.Color(153, 255, 255));
        jbtnReset.setText("Reset");
        jbtnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnResetActionPerformed(evt);
            }
        });

        jLabel8.setText(" Confirm Password :");

        jLabel7.setText(" Password :");

        nationalidtext.setBackground(new java.awt.Color(153, 255, 255));
        nationalidtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nationalidtextActionPerformed(evt);
            }
        });
        nationalidtext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nationalidtextKeyTyped(evt);
            }
        });

        jLabel5.setText("National ID :");
        jLabel5.setToolTipText("");

        passwordtext.setBackground(new java.awt.Color(153, 255, 255));
        passwordtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordtextActionPerformed(evt);
            }
        });
        passwordtext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                passwordtextKeyTyped(evt);
            }
        });

        confirmpasswordtext.setBackground(new java.awt.Color(153, 255, 255));
        confirmpasswordtext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                confirmpasswordtextKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(phonenumbertext, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Addresstext, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstnametext, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastnametext, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailaddresstext, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jbtnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(confirmpasswordtext, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                                    .addComponent(passwordtext)))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(nationalidtext, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(36, 36, 36))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(firstnametext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lastnametext)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(emailaddresstext)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(nationalidtext)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(passwordtext)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(confirmpasswordtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(phonenumbertext)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(17, 17, 17)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbtnRegister)
                        .addComponent(jbtnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Addresstext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jTabbedPane8.addTab("Sign-Up", jPanel6);

        jTabbedPane5.addTab("Registration", jTabbedPane8);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane5)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NationalID_Check_InKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NationalID_Check_InKeyTyped
        // TODO add your handling code here:
        String SSN = NationalID_Check_In.getText();

        int length = SSN.length();

        char c = evt.getKeyChar();

        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            if (length < 14) {
                NationalID_Check_In.setEditable(true);
            } else {
                NationalID_Check_In.setEditable(false);
            }
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                NationalID_Check_In.setEditable(true);
            } else {
                NationalID_Check_In.setEditable(false);
            }
        }
    }//GEN-LAST:event_NationalID_Check_InKeyTyped

    private void jbtnCheck_InActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCheck_InActionPerformed
        //Reg Table
        String national_id = NationalID_Check_In.getText();
        String password = Passwordtext_Check_IN.getText();

        if (national_id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Enter Your National ID");
            return;
        }
        if (password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Enter your Password");
            return;
        }

        //Check_In_ADMINS
        String national_id2 = NationalID_Check_In.getText();

          Check_Login(national_id, password, national_id2);
          
          
        //Reg table
        Connection con = null;
        Statement stmt = null;
        ResultSet result = null;

        //Check_In_ADMINS
        Connection con2 = null;
        Statement stmt2 = null;
        

        try {
            //Reg table
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "SELECT * FROM Reg " //fname la   .....,
            + "WHERE National_ID='" + national_id + "' "
            + "AND Pass_word='" + password + "'";
            result = stmt.executeQuery(query);
            String fname = null;
            String lname = null;

            //in case of success login
            //Reg table
            if (result.next()) {
                fname = result.getString("first_name");
                lname = result.getString("last_name");
                JOptionPane.showMessageDialog(this, "Welcome " + fname + " " + lname);
                //refer to it self
                Adminstratour_Job AJ= new Adminstratour_Job();
                AJ.show();
                dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Invalid Username or Password");
                NationalID_Check_In.setText("");
                Passwordtext_Check_IN.setText("");
                return;
            }
            //Check_In_ADMINS
            con2 = DriverManager.getConnection(url);
            stmt2 = con2.createStatement();
            String query2 = "INSERT INTO Check_In_ADMINS VALUES"
            //depend on where you enter in GUI
            + "('" + national_id2 + "','" + "Adminstratour" + "')";
            int affectRows2 = stmt2.executeUpdate(query2);//0
            //insert
            if (affectRows2 == 1) {//1
                //
            } else {//0
                //  JOptionPane.showMessageDialog(this, "Error");//not reachable
            }

        } catch (Exception e) {
            // JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            //mean by if it connect to the jdbc server then close it for other query (important)
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                }
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                }
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                }
            }

            if (con2 != null) {
                try {
                    con2.close();
                } catch (Exception e) {
                }
            }
            if (stmt2 != null) {
                try {
                    stmt2.close();
                } catch (Exception e) {
                }
            }
            
        }
    }//GEN-LAST:event_jbtnCheck_InActionPerformed

    private void Passwordtext_Check_INKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Passwordtext_Check_INKeyTyped
        // TODO add your handling code here:
        String pass = Passwordtext_Check_IN.getText();

        int length = pass.length();

        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            if (length < 9) {
                Passwordtext_Check_IN.setEditable(true);
            } else {
                evt.consume();
            }
        }
    }//GEN-LAST:event_Passwordtext_Check_INKeyTyped

    private void NationalIDtext_Check_OutKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NationalIDtext_Check_OutKeyTyped
        // TODO add your handling code here:
        String SSN = NationalIDtext_Check_Out.getText();

        int length = SSN.length();

        char c = evt.getKeyChar();

        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            if (length < 14) {
                NationalIDtext_Check_Out.setEditable(true);
            } else {
                NationalIDtext_Check_Out.setEditable(false);
            }
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                NationalIDtext_Check_Out.setEditable(true);
            } else {
                NationalIDtext_Check_Out.setEditable(false);
            }
        }
    }//GEN-LAST:event_NationalIDtext_Check_OutKeyTyped

    private void jbtn_CheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_CheckOutActionPerformed
        //Reg
        String national_id = NationalIDtext_Check_Out.getText();
        String password = Passwordtext_Check_Out.getText();

        if (national_id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Enter Your National ID");
            return;
        }
        if (password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Enter your Password");
            return;
        }

        //Check_Out_ADMINS
        String national_id2 = NationalIDtext_Check_Out.getText();

        //Reg
        Connection con = null;
        Statement stmt = null;
        ResultSet result = null;

        //Check_Out_ADMINS
        Connection con2 = null;
        Statement stmt2 = null;
        ResultSet result2 = null;

        try {
            //Reg
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "SELECT * FROM Reg "
            + "WHERE National_ID='" + national_id + "' "
            + "AND Pass_word='" + password + "'";
            result = stmt.executeQuery(query);
            //in case of success log-out
            if (result.next()) {
                JOptionPane.showMessageDialog(this, "Thank you |^_^|");
                My_Customer MC = new My_Customer();
                MC.show();
                dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Invalid Username or Password");
                NationalIDtext_Check_Out.setText("");
                Passwordtext_Check_Out.setText("");
                return;
            }

            //Check_In_ADMINS
            con2 = DriverManager.getConnection(url);
            stmt2 = con2.createStatement();
            String query2 = "INSERT INTO Check_Out_ADMINS VALUES"
            //depend on where you enter in GUI
            + "('" + national_id2 + "','" + "Adminstratour" + "')";
            int affectRows2 = stmt2.executeUpdate(query2);//0
            //insert
            if (affectRows2 == 1) {//1
                //
            } else {//0
                //  JOptionPane.showMessageDialog(this, "Error");//not reachable
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            //mean by if it connect to the jdbc server then close it for other query (important)
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                }
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                }
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                }
            }
            
            if (con2 != null) {
                try {
                    con.close();
                } catch (Exception e) {
                }
            }
            if (stmt2 != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                }
            }
            
        }
    }//GEN-LAST:event_jbtn_CheckOutActionPerformed

    private void Passwordtext_Check_OutKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Passwordtext_Check_OutKeyTyped
        // TODO add your handling code here:
        String pass = Passwordtext_Check_Out.getText();

        int length = pass.length();

        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            if (length < 9) {
                Passwordtext_Check_Out.setEditable(true);
            } else {
                evt.consume();
            }
        }
    }//GEN-LAST:event_Passwordtext_Check_OutKeyTyped

    private void firstnametextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstnametextKeyTyped
        // TODO add your handling code here:
        String Fname = firstnametext.getText();

        int length = Fname.length();

        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {//string
            if (length < 10) {
                firstnametext.setEditable(true);
            } else {
                evt.consume();//discard
            }
        }
    }//GEN-LAST:event_firstnametextKeyTyped

    private void lastnametextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastnametextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastnametextActionPerformed

    private void lastnametextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lastnametextKeyTyped
        // TODO add your handling code here:
        String Fname = lastnametext.getText();

        int length = Fname.length();

        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            if (length < 10) {
                lastnametext.setEditable(true);
            } else {
                evt.consume();
            }
        }
    }//GEN-LAST:event_lastnametextKeyTyped

    private void emailaddresstextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailaddresstextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailaddresstextActionPerformed

    private void emailaddresstextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailaddresstextKeyTyped
        // TODO add your handling code here:
        String Fname = emailaddresstext.getText();

        int length = Fname.length();

        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            if (length < 20) {
                emailaddresstext.setEditable(true);
            } else {
                evt.consume();
            }
        }
    }//GEN-LAST:event_emailaddresstextKeyTyped

    private void phonenumbertextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phonenumbertextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phonenumbertextActionPerformed

    private void phonenumbertextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phonenumbertextKeyTyped
        // TODO add your handling code here:
        String SSN = phonenumbertext.getText();

        int length = SSN.length();

        char c = evt.getKeyChar();

        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            if (length < 11) {
                phonenumbertext.setEditable(true);
            } else {
                phonenumbertext.setEditable(false);
            }
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                phonenumbertext.setEditable(true);
            } else {
                phonenumbertext.setEditable(false);
            }
        }
    }//GEN-LAST:event_phonenumbertextKeyTyped

    private void AddresstextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddresstextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddresstextActionPerformed

    private void AddresstextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AddresstextKeyTyped
        // TODO add your handling code here:
        String Fname = Addresstext.getText();

        int length = Fname.length();

        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            if (length < 30) {
                Addresstext.setEditable(true);
            } else {
                evt.consume();
            }
        }
    }//GEN-LAST:event_AddresstextKeyTyped

    private void jbtnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRegisterActionPerformed
 
        //any word that user enter in each textfield  getText();
        String fname = firstnametext.getText();
        String lname = lastnametext.getText();
        String email = emailaddresstext.getText();
        String phone = phonenumbertext.getText();
        String address = Addresstext.getText();
        String ssn = nationalidtext.getText();
        String password = passwordtext.getText(); //*******
        String confirmPassword = confirmpasswordtext.getText();
        

        if (fname.isEmpty()) { //""
            JOptionPane.showMessageDialog(this, "Please enter your First Name");
            color_complete_inputs();
        }
        if (lname.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter your Last Name");
            color_complete_inputs();
        }
        if (email.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter your Email");
            color_complete_inputs();
        }
        if (phone.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter your Phone");
            color_complete_inputs();
        }
        if (address.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter your address");
            color_complete_inputs();
        }
        if (ssn.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter your National_ID");
            color_complete_inputs();
        }
        if (password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter your Password");
            color_complete_inputs();
        }
        if (confirmPassword.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter your Confirm Password");
            color_complete_inputs();
        }

        if (!(password.matches(confirmPassword))) {
            JOptionPane.showMessageDialog(this, "Your Password is not match");
            color_complete_inputs();
        }
 //initliazation
        //Reg
        Connection con = null; 
        Statement stmt = null;
        ResultSet result = null;
        
        //ADMINSTRATOUR
        Connection con2 = null;
        Statement stmt2 = null;
        
        
        try {
            //Reg
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "INSERT INTO Reg VALUES"
            + "('" + fname + "','" + lname + "','" + email + "','" + phone + "','" + address + "','" + ssn + "','" + password + "','"+"Adminstratour"+"');";

            int affectRows = stmt.executeUpdate(query);//0
//insert
            if (affectRows == 1) {//1
                JOptionPane.showMessageDialog(this, "Sucessfully Registeration");

                My_Login_Registeration MLR = new My_Login_Registeration();
                MLR.show();
                dispose();
            } else {//0
                JOptionPane.showMessageDialog(this, "Error");//not reachable
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());
                    }
            
            
        try{    
            //ADMINSTRATOUR
            con2 = DriverManager.getConnection(url);
            stmt2 = con2.createStatement();
            String query2 = "INSERT INTO ADMINSTRATOUR VALUES"                                                      //salary    //startdate  //enddate
            + "('" + fname + "','" + lname + "','" + email + "','" + phone + "','" + ssn + "','" + "Adminstratour" + "','"+" "+"','" +""+"','" +""+ "');";

            int affectRows2 = stmt2.executeUpdate(query2);//0
//insert
            if (affectRows2 == 1) {//1
                //
            } else {//0
                JOptionPane.showMessageDialog(this, "Error");//not reachable
            }
            
            
        } catch (Exception e) { //wrong condition
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        finally { //connection , statement , resultset  on -----> off
            //to be ready for next operation next insert or select
            //Reg
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {

                }

            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {

                }

            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {

                }

            }
            
            //ADMINSTRATOUR
             if (con2 != null) {
                try {
                    con2.close();
                } catch (Exception e) {

                }

            }
            if (stmt2 != null) {
                try {
                    stmt2.close();
                } catch (Exception e) {

                }

            }
            
            
        }
    }//GEN-LAST:event_jbtnRegisterActionPerformed

    private void jbtnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnResetActionPerformed
        // TODO add your handling code here:
        nationalidtext.setText("");
        firstnametext.setText("");
        lastnametext.setText("");
        emailaddresstext.setText("");
        phonenumbertext.setText("");
        Addresstext.setText("");
        passwordtext.setText("");
        confirmpasswordtext.setText("");
    }//GEN-LAST:event_jbtnResetActionPerformed

    private void nationalidtextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nationalidtextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nationalidtextActionPerformed

    private void nationalidtextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nationalidtextKeyTyped
        // TODO add your handling code here:
        String SSN = nationalidtext.getText();

        int length = SSN.length();

        char c = evt.getKeyChar();

        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            if (length < 14) {
                nationalidtext.setEditable(true);
            } else {
                nationalidtext.setEditable(false);
            }
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                nationalidtext.setEditable(true);
            } else {
                nationalidtext.setEditable(false);
            }
        }
    }//GEN-LAST:event_nationalidtextKeyTyped

    private void passwordtextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordtextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordtextActionPerformed

    private void passwordtextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordtextKeyTyped
        // TODO add your handling code here:
        String pass = passwordtext.getText();

        int length = pass.length();

        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            if (length < 9) {
                passwordtext.setEditable(true);
            } else {
                evt.consume();
            }
        }
    }//GEN-LAST:event_passwordtextKeyTyped

    private void confirmpasswordtextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_confirmpasswordtextKeyTyped
        // TODO add your handling code here:
        String confirmpass = confirmpasswordtext.getText();

        int length = confirmpass.length();

        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            if (length < 9) {
                confirmpasswordtext.setEditable(true);
            } else {
                evt.consume();
            }
        }
    }//GEN-LAST:event_confirmpasswordtextKeyTyped

    public void color_complete_inputs() {
        if (!nationalidtext.getText().equals("")) {
            nationalidtext.setBackground(Color.green);
        }
        if (!firstnametext.getText().equals("")) {
            firstnametext.setBackground(Color.green);
        }
        if (!lastnametext.getText().equals("")) {

            if (!nationalidtext.getText().equals("")) {
                nationalidtext.setBackground(Color.green);
            }
            if (!firstnametext.getText().equals("")) {
                firstnametext.setBackground(Color.green);
            }
            lastnametext.setBackground(Color.green);
        }
        if (!emailaddresstext.getText().equals("")) {
            emailaddresstext.setBackground(Color.green);
        }
        if (!phonenumbertext.getText().equals("")) {
            phonenumbertext.setBackground(Color.green);
        }
        if (!passwordtext.getText().equals("")) {
            passwordtext.setBackground(Color.green);
        }
        if (!confirmpasswordtext.getText().equals("")) {
            confirmpasswordtext.setBackground(Color.green);
        }
        if (!Addresstext.getText().equals("")) {
            Addresstext.setBackground(Color.green);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(My_Adminstratour.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(My_Adminstratour.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(My_Adminstratour.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(My_Adminstratour.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new My_Adminstratour().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Addresstext;
    private javax.swing.JTextField NationalID_Check_In;
    private javax.swing.JTextField NationalIDtext_Check_Out;
    private javax.swing.JPasswordField Passwordtext_Check_IN;
    private javax.swing.JPasswordField Passwordtext_Check_Out;
    private javax.swing.JPasswordField confirmpasswordtext;
    private javax.swing.JTextField emailaddresstext;
    private javax.swing.JTextField firstnametext;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTabbedPane jTabbedPane6;
    private javax.swing.JTabbedPane jTabbedPane7;
    private javax.swing.JTabbedPane jTabbedPane8;
    private javax.swing.JButton jbtnCheck_In;
    private javax.swing.JButton jbtnRegister;
    private javax.swing.JButton jbtnReset;
    private javax.swing.JButton jbtn_CheckOut;
    private javax.swing.JTextField lastnametext;
    private javax.swing.JTextField nationalidtext;
    private javax.swing.JPasswordField passwordtext;
    private javax.swing.JTextField phonenumbertext;
    // End of variables declaration//GEN-END:variables
boolean Check_Login(String national_id,String password ,String national_id2)
    {
        
        //Reg table
        Connection con = null;
        Statement stmt = null;
        ResultSet result = null;
        
        //Check_In_ADMINS
        Connection con2 = null;
        Statement stmt2 = null;
        
        boolean flag = false;
        try {
            //Reg table
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            String query = "SELECT * FROM Reg " //fname la   ....., 
            + "WHERE National_ID='" + national_id + "' "
            + "AND Pass_word='" + password + "'";
            result = stmt.executeQuery(query);
            String fname = null;
            String lname = null;

            //in case of success login
            //Reg table
            if (result.next()) {
                
                    //refer to it self
                
                
                flag = true;
            } else {
                JOptionPane.showMessageDialog(this, "Invalid Username or Password");
                NationalID_Check_In.setText("");
                Passwordtext_Check_IN.setText("");
              flag = false;
            }
            //Check_In_ADMINS
            con2 = DriverManager.getConnection(url);
            stmt2 = con2.createStatement();
            String query2 = "INSERT INTO Check_In_ADMINS VALUES"
                                            //depend on where you enter in GUI 
            + "('" + national_id2 + "','" + "Customer" + "');";
        int affectRows2 = stmt2.executeUpdate(query2);//0
//insert
            if (affectRows2 == 1) {//1
                //
            } else {//0
              //  JOptionPane.showMessageDialog(this, "Error");//not reachable
            }
            
            
            
        } catch (Exception e) {
           // JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            //mean by if it connect to the jdbc server then close it for other query (important)
            if (con != null) {
                try {
                    con.close();
                } catch (Exception e) {
                }
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e) {
                }
            }
            if (result != null) {
                try {
                    result.close();
                } catch (Exception e) {
                }
            }
            
            if (con2 != null) {
                try {
                    con2.close();
                } catch (Exception e) {
                }
            }
            if (stmt2 != null) {
                try {
                    stmt2.close();
                } catch (Exception e) {
                }
            }
        }
        return flag;
        
    }
}
